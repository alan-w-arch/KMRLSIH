[
  {
    "doc_id": "singly_linkedlist.png",
    "raw_text": "Head ‘Beginnersbook.conv\n= Last node of LinkedList\nContent  Address(Pointer) of the next Points to null\nnode\n\\\nLi} 15 3600-——| 3 4000 ——--| 17 4400-- 90 null\n3200 3600 4000 4400\n\n",
    "file_type": "png",
    "length": 31,
    "cleaned_text": "head beginnersbook.conv  last node of linkedlist content address(pointer) of the next points to null node  li 15 3600- 3 4000 -- 17 4400-- 90 null 3200 3600 4000 4400 ",
    "sentences": [
      "head beginnersbook.conv  last node of linkedlist content address(pointer) of the next points to null node  li 15 3600- 3 4000 -- 17 4400-- 90 null 3200 3600 4000 4400"
    ],
    "words": [
      "head",
      "beginnersbook.conv",
      "last",
      "node",
      "linkedlist",
      "content",
      "address",
      "pointer",
      "next",
      "point",
      "null",
      "node",
      "li",
      "<NUM>",
      "<NUM>-",
      "<NUM>",
      "<NUM>",
      "<NUM>",
      "<NUM>",
      "<NUM>",
      "null",
      "<NUM>",
      "<NUM>",
      "<NUM>",
      "<NUM>"
    ],
    "num_sentences": 1,
    "num_words": 25,
    "chunks": [
      {
        "sentences": [
          "head beginnersbook.conv  last node of linkedlist content address(pointer) of the next points to null node  li 15 3600- 3 4000 -- 17 4400-- 90 null 3200 3600 4000 4400"
        ],
        "words": [
          "head",
          "beginnersbook.conv",
          "last",
          "node",
          "of",
          "linkedlist",
          "content",
          "address(pointer)",
          "of",
          "the",
          "next",
          "points",
          "to",
          "null",
          "node",
          "li",
          "15",
          "3600-",
          "3",
          "4000",
          "--",
          "17",
          "4400--",
          "90",
          "null",
          "3200",
          "3600",
          "4000",
          "4400"
        ],
        "chunk_id": 1,
        "entities": {
          "DATE": [
            "3600",
            "4000",
            "4400",
            "3200",
            "3600",
            "4000",
            "4400"
          ]
        },
        "summary": "head beginnersbook.conv last node of linkedlist content address(pointer) of the next points to null"
      }
    ],
    "doc_summary": "head beginnersbook.conv last node of linkedlist content address(pointer) of the next points to null",
    "entities": {
      "DATE": [
        "4400",
        "3600",
        "4000",
        "3200"
      ]
    }
  },
  {
    "doc_id": "CA_cap_918.pdf",
    "raw_text": "CAP – 918 Mobile-application\nwrite a program to change the text of a heading\n<div class=\"CA-heading\">\n<p>\n{{ headingText }}\n</p>\n<button (click)=\"changeON()\">text</button>\n<button (click)=\"changeOFF()\">Back</button>\n</div>\nchangeON() {\nthis.headingText = 'HELLO SIR FULL MARKS\nPLEASE';\nconsole.log('Button clicked, text changed.');\n// after clicking again on button\n}\nchangeOFF(){\nthis.headingText = 'NO MARKSSSSS';console.log('Button clicked, text changed back.');\n}Decentralized Book Exchange\n\nGET STARTED\n\nHELLO SIR FULL MARKS PLEASE",
    "file_type": "pdf",
    "length": 65,
    "cleaned_text": "cap  918 mobile-application write a program to change the text of a heading div classca-heading p  headingtext  p button (click)changeon()textbutton button (click)changeoff()backbutton div changeon()  this.headingtext  hello sir full marks please; console.log(button clicked, text changed.);  after clicking again on button  changeoff() this.headingtext  no marksssss;console.log(button clicked, text changed back.); decentralized book exchange get started hello sir full marks please",
    "sentences": [
      "cap  918 mobile-application write a program to change the text of a heading div classca-heading p  headingtext  p button (click)changeon()textbutton button (click)changeoff()backbutton div changeon()  this.headingtext  hello sir full marks please; console.log(button clicked, text changed.",
      ");  after clicking again on button  changeoff() this.headingtext  no marksssss;console.log(button clicked, text changed back.",
      "); decentralized book exchange get started hello sir full marks please"
    ],
    "words": [
      "cap",
      "<NUM>",
      "mobile-application",
      "write",
      "program",
      "change",
      "text",
      "heading",
      "div",
      "classca-heading",
      "p",
      "headingtext",
      "p",
      "button",
      "click",
      "changeon",
      "textbutton",
      "button",
      "click",
      "changeoff",
      "backbutton",
      "div",
      "changeon",
      "this.headingtext",
      "hello",
      "sir",
      "full",
      "mark",
      "please",
      "console.log",
      "button",
      "clicked",
      "text",
      "changed",
      "clicking",
      "button",
      "changeoff",
      "this.headingtext",
      "marksssss",
      "console.log",
      "button",
      "clicked",
      "text",
      "changed",
      "back",
      "decentralized",
      "book",
      "exchange",
      "get",
      "started",
      "hello",
      "sir",
      "full",
      "mark",
      "please"
    ],
    "num_sentences": 3,
    "num_words": 55,
    "chunks": [
      {
        "sentences": [
          "cap  918 mobile-application write a program to change the text of a heading div classca-heading p  headingtext  p button (click)changeon()textbutton button (click)changeoff()backbutton div changeon()  this.headingtext  hello sir full marks please; console.log(button clicked, text changed.",
          ");  after clicking again on button  changeoff() this.headingtext  no marksssss;console.log(button clicked, text changed back.",
          "); decentralized book exchange get started hello sir full marks please"
        ],
        "words": [
          "cap",
          "918",
          "mobile-application",
          "write",
          "a",
          "program",
          "to",
          "change",
          "the",
          "text",
          "of",
          "a",
          "heading",
          "div",
          "classca-heading",
          "p",
          "headingtext",
          "p",
          "button",
          "(click)changeon()textbutton",
          "button",
          "(click)changeoff()backbutton",
          "div",
          "changeon()",
          "this.headingtext",
          "hello",
          "sir",
          "full",
          "marks",
          "please;",
          "console.log(button",
          "clicked,",
          "text",
          "changed.",
          ");",
          "after",
          "clicking",
          "again",
          "on",
          "button",
          "changeoff()",
          "this.headingtext",
          "no",
          "marksssss;console.log(button",
          "clicked,",
          "text",
          "changed",
          "back.",
          ");",
          "decentralized",
          "book",
          "exchange",
          "get",
          "started",
          "hello",
          "sir",
          "full",
          "marks",
          "please"
        ],
        "chunk_id": 1,
        "entities": {},
        "summary": "cap 918 mobile-application napište program pro změnu textu čísla div classca-heading p headingtext p button (click)changeon()textbutton button (click)changeoff()backbutton div changeon() this.heading"
      }
    ],
    "doc_summary": "cap 918 mobile-application napište program pro změnu textu čísla div classca-heading p headingtext p button (click)changeon()textbutton button (click)changeoff()backbutton div changeon() this.heading",
    "entities": {}
  },
  {
    "doc_id": "gg.pdf",
    "raw_text": "Your Ingestion Requirements vs Platform\nCapabilities\n\nRequirement = Can n8n Do It? Easier Alternatives\n\nEmail ingestion (IMAP/SMTP) ( Yes (IMAP Email Trigger, Make, Zapier, Airparser\nSMTP via webhook)\n\nMaximo export API © Yes (HTTP Request node Airbyte, Apache NiFi, Talend\nintegration for REST API)\n\nSharePoint API integration © Yes (Microsoft Graph API Power Automate, Make\nvia HTTP node) Integrate.io\n\nWhatsApp PDF ingestion ( Yes (via HTTP API or Twilio Studio, 360dialog, Osmos\n(Meta/Twilio) webhook)\n\nManual file uploads (scans, 14 Yes (Webhook node or Osmos, Docparser, Make\nlinks) custom frontend)\n\nFile type handling (PDF. Yes (Binary data + parsing Docsumo, Rossum, Nanonets\nDOCX, XLSX, images) nodes)\n\n=\n~\n.\n~\n°\n.\n.\n.\n.\n= ടട [1\n°\n~\n\nBilingual text (English + 4. Partially (needs external Google Cloud Vision +\nMalayalam) OCR + language detection) Translate, AWS Textract +\nComprehend\n\nOCR for scanned 4. Needs external API Nanonets, Docsumo, AWS\nimages/handwritten notes (Tesseract, Google Vision) Textract\n\nAirparser, Make, Power\nAutomate\n\nMetadata extraction 4 Yes (via logic nodes +\n(timestamp, sender, external APIs)\nlanguage, etc.)",
    "file_type": "pdf",
    "length": 175,
    "cleaned_text": "your ingestion requirements vs platform capabilities requirement  can n8n do it? easier alternatives email ingestion (imapsmtp) ( yes (imap email trigger, make, zapier, airparser smtp via webhook) maximo export api  yes (http request node airbyte, apache nifi, talend integration for rest api) sharepoint api integration  yes (microsoft graph api power automate, make via http node) integrate.io whatsapp pdf ingestion ( yes (via http api or twilio studio, 360dialog, osmos (metatwilio) webhook) manual file uploads (scans, 14 yes (webhook node or osmos, docparser, make links) custom frontend) file type handling (pdf. yes (binary data  parsing docsumo, rossum, nanonets docx, xlsx, images) nodes)   .   . . . .  ടട 1   bilingual text (english  4. partially (needs external google cloud vision  malayalam) ocr  language detection) translate, aws textract  comprehend ocr for scanned 4. needs external api nanonets, docsumo, aws imageshandwritten notes (tesseract, google vision) textract airparser, make, power automate metadata extraction 4 yes (via logic nodes  (timestamp, sender, external apis) language, etc.)",
    "sentences": [
      "your ingestion requirements vs platform capabilities requirement  can n8n do it?",
      "easier alternatives email ingestion (imapsmtp) ( yes (imap email trigger, make, zapier, airparser smtp via webhook) maximo export api  yes (http request node airbyte, apache nifi, talend integration for rest api) sharepoint api integration  yes (microsoft graph api power automate, make via http node) integrate.io whatsapp pdf ingestion ( yes (via http api or twilio studio, 360dialog, osmos (metatwilio) webhook) manual file uploads (scans, 14 yes (webhook node or osmos, docparser, make links) custom frontend) file type handling (pdf.",
      "yes (binary data  parsing docsumo, rossum, nanonets docx, xlsx, images) nodes)   .",
      ".",
      ".",
      ".",
      ".",
      "ടട 1   bilingual text (english  4. partially (needs external google cloud vision  malayalam) ocr  language detection) translate, aws textract  comprehend ocr for scanned 4. needs external api nanonets, docsumo, aws imageshandwritten notes (tesseract, google vision) textract airparser, make, power automate metadata extraction 4 yes (via logic nodes  (timestamp, sender, external apis) language, etc.)"
    ],
    "words": [
      "ingestion",
      "requirement",
      "v",
      "platform",
      "capability",
      "requirement",
      "n<NUM>n",
      "easier",
      "alternative",
      "email",
      "ingestion",
      "imapsmtp",
      "yes",
      "imap",
      "email",
      "trigger",
      "make",
      "zapier",
      "airparser",
      "smtp",
      "via",
      "webhook",
      "maximo",
      "export",
      "api",
      "yes",
      "http",
      "request",
      "node",
      "airbyte",
      "apache",
      "nifi",
      "talend",
      "integration",
      "rest",
      "api",
      "sharepoint",
      "api",
      "integration",
      "yes",
      "microsoft",
      "graph",
      "api",
      "power",
      "automate",
      "make",
      "via",
      "http",
      "node",
      "integrate.io",
      "whatsapp",
      "pdf",
      "ingestion",
      "yes",
      "via",
      "http",
      "api",
      "twilio",
      "studio",
      "<NUM>dialog",
      "osmos",
      "metatwilio",
      "webhook",
      "manual",
      "file",
      "uploads",
      "scan",
      "<NUM>",
      "yes",
      "webhook",
      "node",
      "osmos",
      "docparser",
      "make",
      "link",
      "custom",
      "frontend",
      "file",
      "type",
      "handling",
      "pdf",
      "yes",
      "binary",
      "data",
      "parsing",
      "docsumo",
      "rossum",
      "nanonets",
      "docx",
      "xlsx",
      "image",
      "node",
      "<NUM>",
      "bilingual",
      "text",
      "english",
      "<NUM>.",
      "partially",
      "need",
      "external",
      "google",
      "cloud",
      "vision",
      "malayalam",
      "ocr",
      "language",
      "detection",
      "translate",
      "aws",
      "textract",
      "comprehend",
      "ocr",
      "scanned",
      "<NUM>.",
      "need",
      "external",
      "api",
      "nanonets",
      "docsumo",
      "aws",
      "imageshandwritten",
      "note",
      "tesseract",
      "google",
      "vision",
      "textract",
      "airparser",
      "make",
      "power",
      "automate",
      "metadata",
      "extraction",
      "<NUM>",
      "yes",
      "via",
      "logic",
      "node",
      "timestamp",
      "sender",
      "external",
      "apis",
      "language",
      "etc"
    ],
    "num_sentences": 8,
    "num_words": 143,
    "chunks": [
      {
        "sentences": [
          "your ingestion requirements vs platform capabilities requirement  can n8n do it?",
          "easier alternatives email ingestion (imapsmtp) ( yes (imap email trigger, make, zapier, airparser smtp via webhook) maximo export api  yes (http request node airbyte, apache nifi, talend integration for rest api) sharepoint api integration  yes (microsoft graph api power automate, make via http node) integrate.io whatsapp pdf ingestion ( yes (via http api or twilio studio, 360dialog, osmos (metatwilio) webhook) manual file uploads (scans, 14 yes (webhook node or osmos, docparser, make links) custom frontend) file type handling (pdf."
        ],
        "words": [
          "your",
          "ingestion",
          "requirements",
          "vs",
          "platform",
          "capabilities",
          "requirement",
          "can",
          "n8n",
          "do",
          "it?",
          "easier",
          "alternatives",
          "email",
          "ingestion",
          "(imapsmtp)",
          "(",
          "yes",
          "(imap",
          "email",
          "trigger,",
          "make,",
          "zapier,",
          "airparser",
          "smtp",
          "via",
          "webhook)",
          "maximo",
          "export",
          "api",
          "yes",
          "(http",
          "request",
          "node",
          "airbyte,",
          "apache",
          "nifi,",
          "talend",
          "integration",
          "for",
          "rest",
          "api)",
          "sharepoint",
          "api",
          "integration",
          "yes",
          "(microsoft",
          "graph",
          "api",
          "power",
          "automate,",
          "make",
          "via",
          "http",
          "node)",
          "integrate.io",
          "whatsapp",
          "pdf",
          "ingestion",
          "(",
          "yes",
          "(via",
          "http",
          "api",
          "or",
          "twilio",
          "studio,",
          "360dialog,",
          "osmos",
          "(metatwilio)",
          "webhook)",
          "manual",
          "file",
          "uploads",
          "(scans,",
          "14",
          "yes",
          "(webhook",
          "node",
          "or",
          "osmos,",
          "docparser,",
          "make",
          "links)",
          "custom",
          "frontend)",
          "file",
          "type",
          "handling",
          "(pdf."
        ],
        "chunk_id": 1,
        "entities": {},
        "summary": "ستاسو د انډول اړتیاوې vs د پلیټ فارم وړتیاوې اړتیا کولی شي n8n دا وکړي؟ اسانه بدیلونه د بریښنالیک انډول (imapsmtp) (هو (imap بریښنالیک ټریګر،"
      },
      {
        "sentences": [
          "yes (binary data  parsing docsumo, rossum, nanonets docx, xlsx, images) nodes)   .",
          ".",
          ".",
          ".",
          ".",
          "ടട 1   bilingual text (english  4. partially (needs external google cloud vision  malayalam) ocr  language detection) translate, aws textract  comprehend ocr for scanned 4. needs external api nanonets, docsumo, aws imageshandwritten notes (tesseract, google vision) textract airparser, make, power automate metadata extraction 4 yes (via logic nodes  (timestamp, sender, external apis) language, etc.)"
        ],
        "words": [
          "yes",
          "(binary",
          "data",
          "parsing",
          "docsumo,",
          "rossum,",
          "nanonets",
          "docx,",
          "xlsx,",
          "images)",
          "nodes)",
          ".",
          ".",
          ".",
          ".",
          ".",
          "ടട",
          "1",
          "bilingual",
          "text",
          "(english",
          "4.",
          "partially",
          "(needs",
          "external",
          "google",
          "cloud",
          "vision",
          "malayalam)",
          "ocr",
          "language",
          "detection)",
          "translate,",
          "aws",
          "textract",
          "comprehend",
          "ocr",
          "for",
          "scanned",
          "4.",
          "needs",
          "external",
          "api",
          "nanonets,",
          "docsumo,",
          "aws",
          "imageshandwritten",
          "notes",
          "(tesseract,",
          "google",
          "vision)",
          "textract",
          "airparser,",
          "make,",
          "power",
          "automate",
          "metadata",
          "extraction",
          "4",
          "yes",
          "(via",
          "logic",
          "nodes",
          "(timestamp,",
          "sender,",
          "external",
          "apis)",
          "language,",
          "etc.)"
        ],
        "chunk_id": 2,
        "entities": {},
        "summary": "هو (binary data parsing docsumo، rossum، nanonets docx، xlsx، انځورونه) نوډونه) . . . . . ടട 1 دوه ژبې متن (انګلیسي 4. په نسبي ډول"
      }
    ],
    "doc_summary": "ستاسو د ننوتلو اړتیاوې vs د پلیټ فارم وړتیاوې اړتیا کولی شي n8n دا وکړي؟ اسانه بدیلونه د بریښنالیک ننوتلو (imapsmtp) (هو (imap بریښنالیک ټریګر،",
    "entities": {}
  },
  {
    "doc_id": "SIH-Logo.png",
    "raw_text": "വിത്‌ smart innia\n7 - HACKATHON\nSH\n\n=F 2025\n\n",
    "file_type": "png",
    "length": 9,
    "cleaned_text": "വത smart innia 7 - hackathon sh f 2025 ",
    "sentences": [
      "വത smart innia 7 - hackathon sh f 2025"
    ],
    "words": [
      "smart",
      "innia",
      "<NUM>",
      "hackathon",
      "sh",
      "f",
      "<NUM>"
    ],
    "num_sentences": 1,
    "num_words": 7,
    "chunks": [
      {
        "sentences": [
          "വത smart innia 7 - hackathon sh f 2025"
        ],
        "words": [
          "വത",
          "smart",
          "innia",
          "7",
          "-",
          "hackathon",
          "sh",
          "f",
          "2025"
        ],
        "chunk_id": 1,
        "entities": {
          "DATE": [
            "2025"
          ]
        },
        "summary": "വത smart innia 7 - hackathon sh f 2025"
      }
    ],
    "doc_summary": "വത smart innia 7 - hackathon sh f 2025",
    "entities": {
      "DATE": [
        "2025"
      ]
    }
  },
  {
    "doc_id": "ML.pdf",
    "raw_text": "െകാ\u0000ി െമേ\u0000ാ െറയി\nൽ\nേസ\u0000ി ആ ൻഡ് േകാംപ്ലയ ൻസ് ഡിപ്പാ ർ\u0000് െമ\u0000്\nസുരക്ഷാ വി\u0000ാപനം / ആഭ\u0000ന്തര സ\nർക്കുലർ\nRef. No.: KMRL/SC/2025/09\nതീയതി: 21-09-2025\nവിഷയം: സുരക്ഷാ നടപടിക ക പാലിക്കുന്നതിനുള്ള നി\nൾ ർശനമായി ർേ\u0000ശങ്ങൾ\nെകാ\u0000ി െമേ\u0000ാ െറയി യാത്രക്കാരുെടയും ജീവനക്കാരുെടയും സുരക്ഷ ഉറപ്പാക്കുന്നതിനായി താെഴ പറയുന്ന\nൽ\nനി ഉട പ്രാബല\u0000ത്തി വരുത്തുന്നു:\nർേ\u0000ശങ്ങൾ ൻ ൽ\n1. േ\u0000ഷ സുരക്ഷ:\nൻ\n○ എ\u0000ാ േ\u0000ഷനുകളി\u0000ം സുരക്ഷാ ഉേദ\u0000ാഗസ്ഥ പൂ സമയ നിരീക്ഷണം നടത്തണം.\nർ ർണ്ണ\n○ ബാേഗജ് \u0000ാനിംഗ് സംവിധാനം ശരിയായി പ്രവ എന്ന് ദിവേസന\nർ\u0000ിക്കു\u0000ുേ\u0000ാ\nപരിേശാധന നടത്തണം.\n2. െ\u0000യി ൻ ഓപ്പേറഷ ൻസ് :\n○ എ\u0000ാ ൈ\u0000വ യാത്ര തുടങ്ങുന്നതിനുമു\u0000് സുരക്ഷാ െചക്ക\u0000ി\u0000് പൂ\nർമാരും ർണ്ണ മായി\nപരിേശാധി\u0000ിരിക്കണം.\n○ അടിയന്തര ഘട്ടങ്ങളി (Emergency) SOP (Standard Operating Procedure)\nൽ\nക പാലിക്കണം.\nർശനമായി\n3. യാത്രക്കാരുെട സുരക്ഷ:\n○ പ്ലാറ്റ്േഫാം ഏരിയയി അടിയന്തര പുറപ്പാട് മാ (Emergency Exits) എ\u0000ായ്േപ്പാ\u0000ം\nൽ ർഗങ്ങൾ\nതുറന്നിരിക്കണം.\n○ യാത്രക്കാ ർക്ക് സുരക്ഷാ നി ർേ\u0000ശങ്ങൾ അറിയിക്കുന്നതിനായി മലയാളം, ഇം\u0000ീഷ്, ഹി\u0000ി\nഭാഷകളി പ്രഖ\u0000ാപനങ്ങ നടത്തണം.\nൽ ൾ\n4. ഫയ ർ ആ ൻഡ് ഇല\u0000ിക്ക ൽ സുരക്ഷ:\n○ ഫയ എക്\u0000ിംഗ\u0000ിഷറുക എ\u0000ാ മാസവും പരിേശാധിക്കണം.\nർ ൾ\n○ ൈവദ\u0000തി സംവിധാനങ്ങളി ൽ ഉ\u0000ാേയക്കാവുന്ന തകരാറുക ൾ ഉട ൻ റിേപ്പാ ർ\u0000് െചയ്യണം.5. റിേപ്പാ ർ\u0000ിംഗ് & ഓഡിറ്റ്:\n○ എ\u0000ാ സുരക്ഷാ സംഭവങ്ങ\u0000ം (Incidents) 24 മണിക്കൂറിനകം റിേപ്പാ ർ\u0000് െചയ്യണം.\n○ മാസാന്ത ഓഡിറ്റ് റിേപ്പാ ർ\u0000് Safety & Compliance Head-ന് സമ ർ\u0000ിക്കണം .\nBy Order,\n[സുരക്ഷാ & അനുസൃത വിഭാഗം]\nെകാ\u0000ി െമേ\u0000ാ െറയി ലിമിറ്റഡ് (KMRL)\nൽ",
    "file_type": "pdf",
    "length": 201,
    "cleaned_text": "ക മ റയ ൽ സ ആ ൻഡ കപലയ ൻസ ഡപപ ർ മ സരകഷ വപന  ആഭനതര സ ർകകലർ ref. no.: kmrlsc202509 തയത: 21-09-2025 വഷയ: സരകഷ നടപടക ക പലകകനനതനളള ന ൾ ർശനമയ ർശങങൾ ക മ റയ യതരകകരടയ ജവനകകരടയ സരകഷ ഉറപപകകനനതനയ തഴ പറയനന ൽ ന ഉട പരബലതത വരതതനന: ർശങങൾ ൻ ൽ 1. ഷ സരകഷ: ൻ  എ ഷനകള സരകഷ ഉദഗസഥ പ സമയ നരകഷണ നടതതണ. ർ ർണണ  ബഗജ നഗ സവധന ശരയയ പരവ എനന ദവസന ർകക പരശധന നടതതണ. 2. യ ൻ ഓപപറഷ ൻസ :  എ വ യതര തടങങനനതനമ സരകഷ ചകക പ ർമര ർണണ മയ പരശധരകകണ.  അടയനതര ഘടടങങള (emergency) sop (standard operating procedure) ൽ ക പലകകണ. ർശനമയ 3. യതരകകരട സരകഷ:  പലററഫ ഏരയയ അടയനതര പറപപട മ (emergency exits) എയപപ ൽ ർഗങങൾ തറനനരകകണ.  യതരകക ർകക സരകഷ ന ർശങങൾ അറയകകനനതനയ മലയള, ഇഷ, ഹ ഭഷകള പരഖപനങങ നടതതണ. ൽ ൾ 4. ഫയ ർ ആ ൻഡ ഇലകക ൽ സരകഷ:  ഫയ എകഗഷറക എ മസവ പരശധകകണ. ർ ൾ  വദത സവധനങങള ൽ ഉയകകവനന തകരറക ൾ ഉട ൻ റപപ ർ ചയയണ.5. റപപ ർഗ  ഓഡററ:  എ സരകഷ സഭവങങ (incidents) 24 മണകകറനക റപപ ർ ചയയണ.  മസനത ഓഡററ റപപ ർ safety  compliance head-ന സമ ർകകണ . by order, സരകഷ  അനസത വഭഗ ക മ റയ ലമററഡ (kmrl) ൽ",
    "sentences": [
      "ക മ റയ ൽ സ ആ ൻഡ കപലയ ൻസ ഡപപ ർ മ സരകഷ വപന  ആഭനതര സ ർകകലർ ref.",
      "no.",
      ": kmrlsc202509 തയത: 21-09-2025 വഷയ: സരകഷ നടപടക ക പലകകനനതനളള ന ൾ ർശനമയ ർശങങൾ ക മ റയ യതരകകരടയ ജവനകകരടയ സരകഷ ഉറപപകകനനതനയ തഴ പറയനന ൽ ന ഉട പരബലതത വരതതനന: ർശങങൾ ൻ ൽ 1.",
      "ഷ സരകഷ: ൻ  എ ഷനകള സരകഷ ഉദഗസഥ പ സമയ നരകഷണ നടതതണ.",
      "ർ ർണണ  ബഗജ നഗ സവധന ശരയയ പരവ എനന ദവസന ർകക പരശധന നടതതണ.",
      "2.",
      "യ ൻ ഓപപറഷ ൻസ :  എ വ യതര തടങങനനതനമ സരകഷ ചകക പ ർമര ർണണ മയ പരശധരകകണ.",
      "അടയനതര ഘടടങങള (emergency) sop (standard operating procedure) ൽ ക പലകകണ.",
      "ർശനമയ 3.",
      "യതരകകരട സരകഷ:  പലററഫ ഏരയയ അടയനതര പറപപട മ (emergency exits) എയപപ ൽ ർഗങങൾ തറനനരകകണ.",
      "യതരകക ർകക സരകഷ ന ർശങങൾ അറയകകനനതനയ മലയള, ഇഷ, ഹ ഭഷകള പരഖപനങങ നടതതണ.",
      "ൽ ൾ 4.",
      "ഫയ ർ ആ ൻഡ ഇലകക ൽ സരകഷ:  ഫയ എകഗഷറക എ മസവ പരശധകകണ.",
      "ർ ൾ  വദത സവധനങങള ൽ ഉയകകവനന തകരറക ൾ ഉട ൻ റപപ ർ ചയയണ.5.",
      "റപപ ർഗ  ഓഡററ:  എ സരകഷ സഭവങങ (incidents) 24 മണകകറനക റപപ ർ ചയയണ.",
      "മസനത ഓഡററ റപപ ർ safety  compliance head-ന സമ ർകകണ .",
      "by order, സരകഷ  അനസത വഭഗ ക മ റയ ലമററഡ (kmrl) ൽ"
    ],
    "words": [
      "ref",
      "kmrlsc<NUM>",
      "<NUM>-<NUM>-<NUM>",
      "<NUM>",
      "<NUM>",
      "emergency",
      "sop",
      "standard",
      "operating",
      "procedure",
      "<NUM>",
      "emergency",
      "exit",
      "<NUM>",
      "incident",
      "<NUM>",
      "safety",
      "compliance",
      "head-ന",
      "order",
      "kmrl"
    ],
    "num_sentences": 17,
    "num_words": 21,
    "chunks": [
      {
        "sentences": [
          "ക മ റയ ൽ സ ആ ൻഡ കപലയ ൻസ ഡപപ ർ മ സരകഷ വപന  ആഭനതര സ ർകകലർ ref.",
          "no.",
          ": kmrlsc202509 തയത: 21-09-2025 വഷയ: സരകഷ നടപടക ക പലകകനനതനളള ന ൾ ർശനമയ ർശങങൾ ക മ റയ യതരകകരടയ ജവനകകരടയ സരകഷ ഉറപപകകനനതനയ തഴ പറയനന ൽ ന ഉട പരബലതത വരതതനന: ർശങങൾ ൻ ൽ 1.",
          "ഷ സരകഷ: ൻ  എ ഷനകള സരകഷ ഉദഗസഥ പ സമയ നരകഷണ നടതതണ.",
          "ർ ർണണ  ബഗജ നഗ സവധന ശരയയ പരവ എനന ദവസന ർകക പരശധന നടതതണ.",
          "2.",
          "യ ൻ ഓപപറഷ ൻസ :  എ വ യതര തടങങനനതനമ സരകഷ ചകക പ ർമര ർണണ മയ പരശധരകകണ.",
          "അടയനതര ഘടടങങള (emergency) sop (standard operating procedure) ൽ ക പലകകണ."
        ],
        "words": [
          "ക",
          "മ",
          "റയ",
          "ൽ",
          "സ",
          "ആ",
          "ൻഡ",
          "കപലയ",
          "ൻസ",
          "ഡപപ",
          "ർ",
          "മ",
          "സരകഷ",
          "വപന",
          "ആഭനതര",
          "സ",
          "ർകകലർ",
          "ref.",
          "no.",
          ":",
          "kmrlsc202509",
          "തയത:",
          "21-09-2025",
          "വഷയ:",
          "സരകഷ",
          "നടപടക",
          "ക",
          "പലകകനനതനളള",
          "ന",
          "ൾ",
          "ർശനമയ",
          "ർശങങൾ",
          "ക",
          "മ",
          "റയ",
          "യതരകകരടയ",
          "ജവനകകരടയ",
          "സരകഷ",
          "ഉറപപകകനനതനയ",
          "തഴ",
          "പറയനന",
          "ൽ",
          "ന",
          "ഉട",
          "പരബലതത",
          "വരതതനന:",
          "ർശങങൾ",
          "ൻ",
          "ൽ",
          "1.",
          "ഷ",
          "സരകഷ:",
          "ൻ",
          "എ",
          "ഷനകള",
          "സരകഷ",
          "ഉദഗസഥ",
          "പ",
          "സമയ",
          "നരകഷണ",
          "നടതതണ.",
          "ർ",
          "ർണണ",
          "ബഗജ",
          "നഗ",
          "സവധന",
          "ശരയയ",
          "പരവ",
          "എനന",
          "ദവസന",
          "ർകക",
          "പരശധന",
          "നടതതണ.",
          "2.",
          "യ",
          "ൻ",
          "ഓപപറഷ",
          "ൻസ",
          ":",
          "എ",
          "വ",
          "യതര",
          "തടങങനനതനമ",
          "സരകഷ",
          "ചകക",
          "പ",
          "ർമര",
          "ർണണ",
          "മയ",
          "പരശധരകകണ.",
          "അടയനതര",
          "ഘടടങങള",
          "(emergency)",
          "sop",
          "(standard",
          "operating",
          "procedure)",
          "ൽ",
          "ക",
          "പലകകണ."
        ],
        "chunk_id": 1,
        "entities": {
          "DATE": [
            "21-09-2025"
          ]
        },
        "summary": "நேபாளத்தில் உள்ள நேபாளப் பகுதிகளில் உள்ள நேபாளப் பகுதிகளில் உள்ள நேபாளப் பகுதிகளில் உள்ள நேபாளப் பகுதிகளில் உள்ள நேபாளப் பகுதிகளில் உள்ள நேபாளப் பகுதிகளில் உள்ள நேபா"
      },
      {
        "sentences": [
          "ർശനമയ 3.",
          "യതരകകരട സരകഷ:  പലററഫ ഏരയയ അടയനതര പറപപട മ (emergency exits) എയപപ ൽ ർഗങങൾ തറനനരകകണ.",
          "യതരകക ർകക സരകഷ ന ർശങങൾ അറയകകനനതനയ മലയള, ഇഷ, ഹ ഭഷകള പരഖപനങങ നടതതണ.",
          "ൽ ൾ 4.",
          "ഫയ ർ ആ ൻഡ ഇലകക ൽ സരകഷ:  ഫയ എകഗഷറക എ മസവ പരശധകകണ.",
          "ർ ൾ  വദത സവധനങങള ൽ ഉയകകവനന തകരറക ൾ ഉട ൻ റപപ ർ ചയയണ.5.",
          "റപപ ർഗ  ഓഡററ:  എ സരകഷ സഭവങങ (incidents) 24 മണകകറനക റപപ ർ ചയയണ.",
          "മസനത ഓഡററ റപപ ർ safety  compliance head-ന സമ ർകകണ .",
          "by order, സരകഷ  അനസത വഭഗ ക മ റയ ലമററഡ (kmrl) ൽ"
        ],
        "words": [
          "ർശനമയ",
          "3.",
          "യതരകകരട",
          "സരകഷ:",
          "പലററഫ",
          "ഏരയയ",
          "അടയനതര",
          "പറപപട",
          "മ",
          "(emergency",
          "exits)",
          "എയപപ",
          "ൽ",
          "ർഗങങൾ",
          "തറനനരകകണ.",
          "യതരകക",
          "ർകക",
          "സരകഷ",
          "ന",
          "ർശങങൾ",
          "അറയകകനനതനയ",
          "മലയള,",
          "ഇഷ,",
          "ഹ",
          "ഭഷകള",
          "പരഖപനങങ",
          "നടതതണ.",
          "ൽ",
          "ൾ",
          "4.",
          "ഫയ",
          "ർ",
          "ആ",
          "ൻഡ",
          "ഇലകക",
          "ൽ",
          "സരകഷ:",
          "ഫയ",
          "എകഗഷറക",
          "എ",
          "മസവ",
          "പരശധകകണ.",
          "ർ",
          "ൾ",
          "വദത",
          "സവധനങങള",
          "ൽ",
          "ഉയകകവനന",
          "തകരറക",
          "ൾ",
          "ഉട",
          "ൻ",
          "റപപ",
          "ർ",
          "ചയയണ.5.",
          "റപപ",
          "ർഗ",
          "ഓഡററ:",
          "എ",
          "സരകഷ",
          "സഭവങങ",
          "(incidents)",
          "24",
          "മണകകറനക",
          "റപപ",
          "ർ",
          "ചയയണ.",
          "മസനത",
          "ഓഡററ",
          "റപപ",
          "ർ",
          "safety",
          "compliance",
          "head-ന",
          "സമ",
          "ർകകണ",
          ".",
          "by",
          "order,",
          "സരകഷ",
          "അനസത",
          "വഭഗ",
          "ക",
          "മ",
          "റയ",
          "ലമററഡ",
          "(kmrl)",
          "ൽ"
        ],
        "chunk_id": 2,
        "entities": {
          "ORG": [
            "പലററഫ",
            "ആ ൻഡ",
            "ഓഡററ",
            "മസനത ഓഡററ",
            "##മറ"
          ],
          "LOC": [
            "മ",
            "ല",
            "##റഡ"
          ]
        },
        "summary": "இசுலாமியப் பேரரசுத் தலைவராகவும், இந்தியப் பேரரசுத் துணைத் தலைவராகவும் இருந்தார். இசுலாமியப் பேரரசுத் தலைவராகவும் இருந்தார். இசுலாமியப் பேரரசுத் தலைவராகவும்"
      }
    ],
    "doc_summary": "குறிப்பாக: குறிப்பாக: குறிப்பாக: குறிப்பாக: குறிப்பாக: குறிப்பாக: குறிப்பாக: குறிப்பாக: குறிப்பாக: குறிப்பாக: குறிப்பாக: குறி",
    "entities": {
      "DATE": [
        "21-09-2025"
      ],
      "ORG": [
        "##മറ",
        "ആ ൻഡ",
        "പലററഫ",
        "മസനത ഓഡററ",
        "ഓഡററ"
      ],
      "LOC": [
        "ല",
        "##റഡ",
        "മ"
      ]
    }
  },
  {
    "doc_id": "arrayandlinkedlist.jpg",
    "raw_text": "Difference between ArrayList and LinkedList in Java\n\nArrayList LinkedList\nArrayList internally uses a dynamic array | LinkedList internally uses a doubly linked\nto store the elements listto store the elements\n\nelement is removed from the array, all | list, sono bit shifting is required in\n\nthe bits are shifted in memory. | memory.\n\nArrayList consumes less memory than [| A LinkedList consumes more memory than\n\nLinkedList an ArrayList because it also stores the next\nand previous references along with the\ndata,\n\n‘An Arraylist class can act asa list only | LinkedList class can act as alist and\n\nbecause it implements List only. queue both because it implements List\nand Deque interfaces.\n\nArrayList is better for storing and LinkedList is better for manipulating data,\n\naccessing data,\n\n",
    "file_type": "jpg",
    "length": 125,
    "cleaned_text": "difference between arraylist and linkedlist in java arraylist linkedlist arraylist internally uses a dynamic array  linkedlist internally uses a doubly linked to store the elements listto store the elements element is removed from the array, all  list, sono bit shifting is required in the bits are shifted in memory.  memory. arraylist consumes less memory than  a linkedlist consumes more memory than linkedlist an arraylist because it also stores the next and previous references along with the data, an arraylist class can act asa list only  linkedlist class can act as alist and because it implements list only. queue both because it implements list and deque interfaces. arraylist is better for storing and linkedlist is better for manipulating data, accessing data, ",
    "sentences": [
      "difference between arraylist and linkedlist in java arraylist linkedlist arraylist internally uses a dynamic array  linkedlist internally uses a doubly linked to store the elements listto store the elements element is removed from the array, all  list, sono bit shifting is required in the bits are shifted in memory.",
      "memory.",
      "arraylist consumes less memory than  a linkedlist consumes more memory than linkedlist an arraylist because it also stores the next and previous references along with the data, an arraylist class can act asa list only  linkedlist class can act as alist and because it implements list only.",
      "queue both because it implements list and deque interfaces.",
      "arraylist is better for storing and linkedlist is better for manipulating data, accessing data,"
    ],
    "words": [
      "difference",
      "arraylist",
      "linkedlist",
      "java",
      "arraylist",
      "linkedlist",
      "arraylist",
      "internally",
      "us",
      "dynamic",
      "array",
      "linkedlist",
      "internally",
      "us",
      "doubly",
      "linked",
      "store",
      "element",
      "listto",
      "store",
      "element",
      "element",
      "removed",
      "array",
      "list",
      "sono",
      "bit",
      "shifting",
      "required",
      "bit",
      "shifted",
      "memory",
      "memory",
      "arraylist",
      "consumes",
      "less",
      "memory",
      "linkedlist",
      "consumes",
      "memory",
      "linkedlist",
      "arraylist",
      "also",
      "store",
      "next",
      "previous",
      "reference",
      "along",
      "data",
      "arraylist",
      "class",
      "act",
      "asa",
      "list",
      "linkedlist",
      "class",
      "act",
      "alist",
      "implement",
      "list",
      "queue",
      "implement",
      "list",
      "deque",
      "interface",
      "arraylist",
      "better",
      "storing",
      "linkedlist",
      "better",
      "manipulating",
      "data",
      "accessing",
      "data"
    ],
    "num_sentences": 5,
    "num_words": 74,
    "chunks": [
      {
        "sentences": [
          "difference between arraylist and linkedlist in java arraylist linkedlist arraylist internally uses a dynamic array  linkedlist internally uses a doubly linked to store the elements listto store the elements element is removed from the array, all  list, sono bit shifting is required in the bits are shifted in memory.",
          "memory.",
          "arraylist consumes less memory than  a linkedlist consumes more memory than linkedlist an arraylist because it also stores the next and previous references along with the data, an arraylist class can act asa list only  linkedlist class can act as alist and because it implements list only."
        ],
        "words": [
          "difference",
          "between",
          "arraylist",
          "and",
          "linkedlist",
          "in",
          "java",
          "arraylist",
          "linkedlist",
          "arraylist",
          "internally",
          "uses",
          "a",
          "dynamic",
          "array",
          "linkedlist",
          "internally",
          "uses",
          "a",
          "doubly",
          "linked",
          "to",
          "store",
          "the",
          "elements",
          "listto",
          "store",
          "the",
          "elements",
          "element",
          "is",
          "removed",
          "from",
          "the",
          "array,",
          "all",
          "list,",
          "sono",
          "bit",
          "shifting",
          "is",
          "required",
          "in",
          "the",
          "bits",
          "are",
          "shifted",
          "in",
          "memory.",
          "memory.",
          "arraylist",
          "consumes",
          "less",
          "memory",
          "than",
          "a",
          "linkedlist",
          "consumes",
          "more",
          "memory",
          "than",
          "linkedlist",
          "an",
          "arraylist",
          "because",
          "it",
          "also",
          "stores",
          "the",
          "next",
          "and",
          "previous",
          "references",
          "along",
          "with",
          "the",
          "data,",
          "an",
          "arraylist",
          "class",
          "can",
          "act",
          "asa",
          "list",
          "only",
          "linkedlist",
          "class",
          "can",
          "act",
          "as",
          "alist",
          "and",
          "because",
          "it",
          "implements",
          "list",
          "only."
        ],
        "chunk_id": 1,
        "entities": {},
        "summary": "rozdíl mezi arraylist a linkedlist v javě arraylist linkedlist arraylist internally používá dynamický array linkedlist internally používá dvojitě propojený pro ukládání prvků listu pro ukládání prvků prvek je"
      },
      {
        "sentences": [
          "queue both because it implements list and deque interfaces.",
          "arraylist is better for storing and linkedlist is better for manipulating data, accessing data,"
        ],
        "words": [
          "queue",
          "both",
          "because",
          "it",
          "implements",
          "list",
          "and",
          "deque",
          "interfaces.",
          "arraylist",
          "is",
          "better",
          "for",
          "storing",
          "and",
          "linkedlist",
          "is",
          "better",
          "for",
          "manipulating",
          "data,",
          "accessing",
          "data,"
        ],
        "chunk_id": 2,
        "entities": {},
        "summary": "queue both because it implements list and deque interfaces. arraylist is better for storing and linkedlist is better for manipulating data, accessing data,"
      }
    ],
    "doc_summary": "ភាព ខុស គ្នា រវាង arraylist និង linkedlist ក្នុង java arraylist linkedlist arraylist ខាង ក្នុង ប្រើ array dynamic linkedlist ខាង ក្នុង ប្រើ តំណ ពីរ ដង ដើម្បី ទុក ធាតុ listto store the elements element is removed from the",
    "entities": {}
  },
  {
    "doc_id": "Screenshot 2025-09-23 125628.png",
    "raw_text": "",
    "file_type": "png",
    "length": 0,
    "cleaned_text": "",
    "sentences": [],
    "words": [],
    "num_sentences": 0,
    "num_words": 0,
    "chunks": [],
    "doc_summary": "",
    "entities": {}
  },
  {
    "doc_id": "supabase-schema-zsxheuylffsgtqjrzueb.png",
    "raw_text": "",
    "file_type": "png",
    "length": 0,
    "cleaned_text": "",
    "sentences": [],
    "words": [],
    "num_sentences": 0,
    "num_words": 0,
    "chunks": [],
    "doc_summary": "",
    "entities": {}
  },
  {
    "doc_id": "SISE-learning-roadmap.pdf",
    "raw_text": "SISE Learning Roadmap: From Masters Student to\nSystems Programming Expert\nOverview\nBased on your SISE project requirements and current status as a Masters student, here's a\ncomprehensive learning roadmap to build the Spec Intelligence Scoring Engine. The project\nprimarily uses C\u0000\u0000, Rust, Python, and JavaScript/TypeScript with Tauri for the desktop\nfrontend. Java is NOT required for this specific project, though it can be useful for enterprise\nintegrations later.\nPhase 1\u0000 Foundation Building \u0000Months 1\u00003\u0000\nParallel learning approach for maximum efficiency\n1.1 Core Programming Foundations\nWeek 1\u00002\u0000 C\u0000\u0000 Fundamentals\nResources:\nComplete Guide to C\u0000\u0000 Programming Foundations \u0000LinkedIn Learning)[54]\nC\u0000\u0000 Developer Roadmap on GitHub[51]\nFocus Areas:\nBasic syntax, data types, control structures[48]\nObject-oriented programming concepts\nMemory management (pointers, references)\nStandard Template Library \u0000STL) basics\nPractice: Build a simple system monitor that reads CPU/memory usage\nWeek 3\u00004\u0000 System Programming in C\u0000\u0000\nResources:\nCross-Platform System Programming Guide[65]\nIntroduction to Data Structures and Algorithms in C\u0000\u0000\u000060\u0000\nFocus Areas:\nFile I/O operations[65]\nCross-platform compatibility \u0000Windows, macOS, Linux)\nSystem API interfacing[30]\nProcess and thread managementPractice: Create a cross-platform file system watcher\nWeek 5\u00006\u0000 Rust Basics\nResources:\nThe Rust Programming Language Book[55]\nRust Roadmap: Complete Guide 2025\u000052\u0000\nFocus Areas:\nOwnership and borrowing system[52]\nStructs, enums, and pattern matching\nError handling with Result and Option types\nBasic cargo package management\nPractice: Rewrite the file system watcher in Rust\nWeek 7\u00008\u0000 Advanced Rust Concepts\nResources:\nRustlings interactive exercises[58]\nRust by Example[55]\nFocus Areas:\nConcurrency and async programming[52]\nFFI \u0000Foreign Function Interface) for C\u0000\u0000 integration\nMemory safety and unsafe code blocks\nAdvanced pattern matching and generics\nPractice: Build a multithreaded data processing pipeline\nWeek 9\u000012\u0000 Web Technologies & Desktop Development\nJavaScript/TypeScript:\nModern ES6+ features, async/await\nTypeScript fundamentals and type system\nReact basics and component architecture\nTauri Framework:\nTauri getting started guide[63]\u000066]\nSystem tray integration[39]\nRust-JavaScript communication patterns[63]\nPractice: Create a simple desktop app with Tauri that displays system info1.2 Mathematics & Statistics Foundation\nConcurrent Learning \u0000Throughout Phase 1\u0000\nLinear Algebra: Vectors, matrices, eigenvalues\nStatistics: Descriptive statistics, probability distributions\nCalculus: Derivatives for optimization algorithms\nResources: Khan Academy, MIT OpenCourseWare\nPhase 2\u0000 Machine Learning & AI Engineering \u0000Months 4\u00006\u0000\n2.1 Python for Machine Learning\nResources:\nMachine Learning Engineer career track[53]\nPython programming for ML\u000050\u0000\u000056\u0000\nFocus Areas:\nNumPy, Pandas, Matplotlib for data manipulation\nScikit-learn for classical ML algorithms\nTensorFlow/PyTorch for deep learning\nData preprocessing and feature engineering[56]\n2.2 ML Model Development\nClassical Algorithms:\nRegression (linear, logistic, polynomial)\nDecision trees and ensemble methods \u0000Random Forest, XGBoost)\nClustering algorithms \u0000K-means, DBSCAN\u0000\nDeep Learning:\nNeural networks fundamentals\nLSTM networks for time series prediction\nModel evaluation and validation techniques[50]\n2.3 ONNX Runtime Integration\nResources:\nONNX Runtime documentation[70]\nTutorial: Python to ONNX conversion[67]\nFocus Areas:\nConverting PyTorch/TensorFlow models to ONNX\u000064\u0000\u000067\u0000ONNX Runtime C\u0000\u0000 API integration[64]\nCross-platform model deployment[64]\nPerformance optimization techniques\nPractice Project: Train a hardware performance prediction model in Python, export to ONNX,\nand integrate with Rust/C\u0000\u0000 backend.\nPhase 3\u0000 Systems Integration & Advanced Topics \u0000Months 7\u00009\u0000\n3.1 Advanced Systems Programming\nHardware Telemetry Collection:\nWindows Performance Counters API\nLinux /proc and /sys filesystem\nmacOS system_profiler and sysctl\nCross-Platform Development:\nCMake build systems\nPackage managers (vcpkg, conan)\nCI/CD for multiple platforms[68]\n3.2 Real-Time Data Processing\nRust Ecosystem:\nTokio async runtime for concurrent processing[29]\nSerde for serialization/deserialization\nmetrics-rs for performance monitoring[29]\nOpenTelemetry Integration:\nDistributed tracing and metrics collection[16]\nCross-language telemetry standardization\n3.3 Advanced Desktop Development\nTauri Advanced Features:\nCustom system tray menus[39]\nBackground service integration\nAuto-updating mechanisms[63]\nPlatform-specific optimizations\nPractice Project: Build a complete system monitoring dashboard with real-time telemetry\ncollection, ML prediction, and cross-platform desktop interface.Phase 4\u0000 Production-Ready Development \u0000Months 10\u000012\u0000\n4.1 Software Engineering Best Practices\nVersion Control: Advanced Git workflows, branching strategies\nTesting: Unit testing in Rust/C\u0000\u0000, integration testing\nDocumentation: API documentation, user guides\nCode Quality: Linting, formatting, code reviews\n4.2 Performance Optimization\nProfiling Tools:\nRust: cargo flamegraph, perf\nC\u0000\u0000\u0000 Intel VTune, Valgrind\nMemory Management: Efficient data structures, cache-friendly algorithms\nConcurrency: Lock-free programming, async optimization\n4.3 Security & Privacy\nData Protection: Encryption, secure storage\nPrivacy-Preserving ML: Federated learning concepts\nSecurity Auditing: Common vulnerabilities, secure coding practices\nCapstone Project: Complete SISE prototype with all core features implemented and tested.\nRecommended Learning Schedule \u0000Masters Student Context)\nSemester-Aligned Approach\nSemester 1 \u0000Sep-Dec): Phase 1 \u0000 Phase 2 \u0000Part 1\u0000\nFocus on fundamentals during lighter academic load\nBuild strong foundation in systems programming\nStart ML concepts alongside coursework\nWinter Break: Intensive Phase 2 completion\nDedicated time for hands-on ML projects\nONNX Runtime integration experiments\nSemester 2 \u0000Jan-May): Phase 3 \u0000 Phase 4 \u0000Part 1\u0000\nAdvanced topics while managing coursework\nReal-world project implementation\nSummer Break: Phase 4 completion + PortfolioFinal implementation and optimization\nDocumentation and presentation preparation\nKey Resources & Tools\nDevelopment Environment Setup\n# Rust toolchain\ncurl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh\n# Node.js for Tauri frontend\n# Download from nodejs.org (LTS version)\n# Python ML environment\nconda create -n sise python=3.11\nconda activate sise\npip install torch tensorflow scikit-learn onnx onnxruntime\n# C++ development tools\n# Windows: Visual Studio Build Tools\n# Linux: build-essential, cmake\n# macOS: Xcode Command Line Tools\nEssential Learning Platforms\nProgramming: GitHub Codespaces, VS Code\nML: Jupyter Notebooks, Google Colab\nDocumentation: Rust docs, C\u0000\u0000 reference, MDN\nPractice: LeetCode (algorithms), Exercism (language-specific)\nProject Milestones & Validation\nMonth 3 Checkpoint: Foundation Validation\nC\u0000\u0000 Skills: Build cross-platform system info tool\nRust Skills: Create async telemetry collector\nIntegration: Simple Tauri app with backend communication\nMonth 6 Checkpoint: ML Integration\nModel Development: Working hardware performance predictor\nONNX Deployment: Model running in production environment\nData Pipeline: End-to-end telemetry to prediction flowMonth 9 Checkpoint: System Integration\nComplete Backend: Full telemetry collection and processing\nDesktop Frontend: Production-quality user interface\nCross-Platform: Verified operation on Windows, macOS, Linux\nMonth 12 Checkpoint: Production Ready\nPerformance Optimized: Sub-second response times\nFully Tested: Comprehensive test coverage\nDocumentation: Complete technical and user documentation\nPatent Ready: Implementation matching patent specifications\nSuccess Strategies for Masters Students\nTime Management\n20-hour weekly commitment: 3 hours daily + 5 hours weekend intensive\nProject-based learning: Focus on building rather than just studying\nAcademic integration: Use SISE as thesis/capstone project if possible\nSkill Validation\nOpen Source Contributions: Contribute to related Rust/C\u0000\u0000 projects\nTechnical Blog: Document learning journey and technical decisions\nCode Portfolio: Maintain clean GitHub repository with progress demos\nCareer Preparation\nIndustry Networking: Join Rust, systems programming communities\nConference Participation: Present work at student conferences\nInternship Alignment: Seek internships in systems/ML engineering roles\nThis roadmap provides a structured path from your current Masters student status to becoming\ncapable of implementing the complete SISE system. The key is consistent daily practice\ncombined with hands-on project work that incrementally builds toward the final goal.",
    "file_type": "pdf",
    "length": 1075,
    "cleaned_text": "sise learning roadmap: from masters student to systems programming expert overview based on your sise project requirements and current status as a masters student, heres a comprehensive learning roadmap to build the spec intelligence scoring engine. the project primarily uses c, rust, python, and javascripttypescript with tauri for the desktop frontend. java is not required for this specific project, though it can be useful for enterprise integrations later. phase 1 foundation building months 13 parallel learning approach for maximum efficiency 1.1 core programming foundations week 12 c fundamentals resources: complete guide to c programming foundations linkedin learning)54 c developer roadmap on github51 focus areas: basic syntax, data types, control structures48 object-oriented programming concepts memory management (pointers, references) standard template library stl) basics practice: build a simple system monitor that reads cpumemory usage week 34 system programming in c resources: cross-platform system programming guide65 introduction to data structures and algorithms in c60 focus areas: file io operations65 cross-platform compatibility windows, macos, linux) system api interfacing30 process and thread managementpractice: create a cross-platform file system watcher week 56 rust basics resources: the rust programming language book55 rust roadmap: complete guide 202552 focus areas: ownership and borrowing system52 structs, enums, and pattern matching error handling with result and option types basic cargo package management practice: rewrite the file system watcher in rust week 78 advanced rust concepts resources: rustlings interactive exercises58 rust by example55 focus areas: concurrency and async programming52 ffi foreign function interface) for c integration memory safety and unsafe code blocks advanced pattern matching and generics practice: build a multithreaded data processing pipeline week 912 web technologies  desktop development javascripttypescript: modern es6 features, asyncawait typescript fundamentals and type system react basics and component architecture tauri framework: tauri getting started guide6366 system tray integration39 rust-javascript communication patterns63 practice: create a simple desktop app with tauri that displays system info1.2 mathematics  statistics foundation concurrent learning throughout phase 1 linear algebra: vectors, matrices, eigenvalues statistics: descriptive statistics, probability distributions calculus: derivatives for optimization algorithms resources: khan academy, mit opencourseware phase 2 machine learning  ai engineering months 46 2.1 python for machine learning resources: machine learning engineer career track53 python programming for ml5056 focus areas: numpy, pandas, matplotlib for data manipulation scikit-learn for classical ml algorithms tensorflowpytorch for deep learning data preprocessing and feature engineering56 2.2 ml model development classical algorithms: regression (linear, logistic, polynomial) decision trees and ensemble methods random forest, xgboost) clustering algorithms k-means, dbscan deep learning: neural networks fundamentals lstm networks for time series prediction model evaluation and validation techniques50 2.3 onnx runtime integration resources: onnx runtime documentation70 tutorial: python to onnx conversion67 focus areas: converting pytorchtensorflow models to onnx6467onnx runtime c api integration64 cross-platform model deployment64 performance optimization techniques practice project: train a hardware performance prediction model in python, export to onnx, and integrate with rustc backend. phase 3 systems integration  advanced topics months 79 3.1 advanced systems programming hardware telemetry collection: windows performance counters api linux proc and sys filesystem macos system_profiler and sysctl cross-platform development: cmake build systems package managers (vcpkg, conan) cicd for multiple platforms68 3.2 real-time data processing rust ecosystem: tokio async runtime for concurrent processing29 serde for serializationdeserialization metrics-rs for performance monitoring29 opentelemetry integration: distributed tracing and metrics collection16 cross-language telemetry standardization 3.3 advanced desktop development tauri advanced features: custom system tray menus39 background service integration auto-updating mechanisms63 platform-specific optimizations practice project: build a complete system monitoring dashboard with real-time telemetry collection, ml prediction, and cross-platform desktop interface.phase 4 production-ready development months 1012 4.1 software engineering best practices version control: advanced git workflows, branching strategies testing: unit testing in rustc, integration testing documentation: api documentation, user guides code quality: linting, formatting, code reviews 4.2 performance optimization profiling tools: rust: cargo flamegraph, perf c intel vtune, valgrind memory management: efficient data structures, cache-friendly algorithms concurrency: lock-free programming, async optimization 4.3 security  privacy data protection: encryption, secure storage privacy-preserving ml: federated learning concepts security auditing: common vulnerabilities, secure coding practices capstone project: complete sise prototype with all core features implemented and tested. recommended learning schedule masters student context) semester-aligned approach semester 1 sep-dec): phase 1  phase 2 part 1 focus on fundamentals during lighter academic load build strong foundation in systems programming start ml concepts alongside coursework winter break: intensive phase 2 completion dedicated time for hands-on ml projects onnx runtime integration experiments semester 2 jan-may): phase 3  phase 4 part 1 advanced topics while managing coursework real-world project implementation summer break: phase 4 completion  portfoliofinal implementation and optimization documentation and presentation preparation key resources  tools development environment setup  rust toolchain curl --proto https --tlsv1.2 -ssf https:sh.rustup.rs  sh  node.js for tauri frontend  download from nodejs.org (lts version)  python ml environment conda create -n sise python3.11 conda activate sise pip install torch tensorflow scikit-learn onnx onnxruntime  c development tools  windows: visual studio build tools  linux: build-essential, cmake  macos: xcode command line tools essential learning platforms programming: github codespaces, vs code ml: jupyter notebooks, google colab documentation: rust docs, c reference, mdn practice: leetcode (algorithms), exercism (language-specific) project milestones  validation month 3 checkpoint: foundation validation c skills: build cross-platform system info tool rust skills: create async telemetry collector integration: simple tauri app with backend communication month 6 checkpoint: ml integration model development: working hardware performance predictor onnx deployment: model running in production environment data pipeline: end-to-end telemetry to prediction flowmonth 9 checkpoint: system integration complete backend: full telemetry collection and processing desktop frontend: production-quality user interface cross-platform: verified operation on windows, macos, linux month 12 checkpoint: production ready performance optimized: sub-second response times fully tested: comprehensive test coverage documentation: complete technical and user documentation patent ready: implementation matching patent specifications success strategies for masters students time management 20-hour weekly commitment: 3 hours daily  5 hours weekend intensive project-based learning: focus on building rather than just studying academic integration: use sise as thesiscapstone project if possible skill validation open source contributions: contribute to related rustc projects technical blog: document learning journey and technical decisions code portfolio: maintain clean github repository with progress demos career preparation industry networking: join rust, systems programming communities conference participation: present work at student conferences internship alignment: seek internships in systemsml engineering roles this roadmap provides a structured path from your current masters student status to becoming capable of implementing the complete sise system. the key is consistent daily practice combined with hands-on project work that incrementally builds toward the final goal.",
    "sentences": [
      "sise learning roadmap: from masters student to systems programming expert overview based on your sise project requirements and current status as a masters student, heres a comprehensive learning roadmap to build the spec intelligence scoring engine.",
      "the project primarily uses c, rust, python, and javascripttypescript with tauri for the desktop frontend.",
      "java is not required for this specific project, though it can be useful for enterprise integrations later.",
      "phase 1 foundation building months 13 parallel learning approach for maximum efficiency 1.1 core programming foundations week 12 c fundamentals resources: complete guide to c programming foundations linkedin learning)54 c developer roadmap on github51 focus areas: basic syntax, data types, control structures48 object-oriented programming concepts memory management (pointers, references) standard template library stl) basics practice: build a simple system monitor that reads cpumemory usage week 34 system programming in c resources: cross-platform system programming guide65 introduction to data structures and algorithms in c60 focus areas: file io operations65 cross-platform compatibility windows, macos, linux) system api interfacing30 process and thread managementpractice: create a cross-platform file system watcher week 56 rust basics resources: the rust programming language book55 rust roadmap: complete guide 202552 focus areas: ownership and borrowing system52 structs, enums, and pattern matching error handling with result and option types basic cargo package management practice: rewrite the file system watcher in rust week 78 advanced rust concepts resources: rustlings interactive exercises58 rust by example55 focus areas: concurrency and async programming52 ffi foreign function interface) for c integration memory safety and unsafe code blocks advanced pattern matching and generics practice: build a multithreaded data processing pipeline week 912 web technologies  desktop development javascripttypescript: modern es6 features, asyncawait typescript fundamentals and type system react basics and component architecture tauri framework: tauri getting started guide6366 system tray integration39 rust-javascript communication patterns63 practice: create a simple desktop app with tauri that displays system info1.2 mathematics  statistics foundation concurrent learning throughout phase 1 linear algebra: vectors, matrices, eigenvalues statistics: descriptive statistics, probability distributions calculus: derivatives for optimization algorithms resources: khan academy, mit opencourseware phase 2 machine learning  ai engineering months 46 2.1 python for machine learning resources: machine learning engineer career track53 python programming for ml5056 focus areas: numpy, pandas, matplotlib for data manipulation scikit-learn for classical ml algorithms tensorflowpytorch for deep learning data preprocessing and feature engineering56 2.2 ml model development classical algorithms: regression (linear, logistic, polynomial) decision trees and ensemble methods random forest, xgboost) clustering algorithms k-means, dbscan deep learning: neural networks fundamentals lstm networks for time series prediction model evaluation and validation techniques50 2.3 onnx runtime integration resources: onnx runtime documentation70 tutorial: python to onnx conversion67 focus areas: converting pytorchtensorflow models to onnx6467onnx runtime c api integration64 cross-platform model deployment64 performance optimization techniques practice project: train a hardware performance prediction model in python, export to onnx, and integrate with rustc backend.",
      "phase 3 systems integration  advanced topics months 79 3.1 advanced systems programming hardware telemetry collection: windows performance counters api linux proc and sys filesystem macos system_profiler and sysctl cross-platform development: cmake build systems package managers (vcpkg, conan) cicd for multiple platforms68 3.2 real-time data processing rust ecosystem: tokio async runtime for concurrent processing29 serde for serializationdeserialization metrics-rs for performance monitoring29 opentelemetry integration: distributed tracing and metrics collection16 cross-language telemetry standardization 3.3 advanced desktop development tauri advanced features: custom system tray menus39 background service integration auto-updating mechanisms63 platform-specific optimizations practice project: build a complete system monitoring dashboard with real-time telemetry collection, ml prediction, and cross-platform desktop interface.phase 4 production-ready development months 1012 4.1 software engineering best practices version control: advanced git workflows, branching strategies testing: unit testing in rustc, integration testing documentation: api documentation, user guides code quality: linting, formatting, code reviews 4.2 performance optimization profiling tools: rust: cargo flamegraph, perf c intel vtune, valgrind memory management: efficient data structures, cache-friendly algorithms concurrency: lock-free programming, async optimization 4.3 security  privacy data protection: encryption, secure storage privacy-preserving ml: federated learning concepts security auditing: common vulnerabilities, secure coding practices capstone project: complete sise prototype with all core features implemented and tested.",
      "recommended learning schedule masters student context) semester-aligned approach semester 1 sep-dec): phase 1  phase 2 part 1 focus on fundamentals during lighter academic load build strong foundation in systems programming start ml concepts alongside coursework winter break: intensive phase 2 completion dedicated time for hands-on ml projects onnx runtime integration experiments semester 2 jan-may): phase 3  phase 4 part 1 advanced topics while managing coursework real-world project implementation summer break: phase 4 completion  portfoliofinal implementation and optimization documentation and presentation preparation key resources  tools development environment setup  rust toolchain curl --proto https --tlsv1.2 -ssf https:sh.rustup.rs  sh  node.js for tauri frontend  download from nodejs.org (lts version)  python ml environment conda create -n sise python3.11 conda activate sise pip install torch tensorflow scikit-learn onnx onnxruntime  c development tools  windows: visual studio build tools  linux: build-essential, cmake  macos: xcode command line tools essential learning platforms programming: github codespaces, vs code ml: jupyter notebooks, google colab documentation: rust docs, c reference, mdn practice: leetcode (algorithms), exercism (language-specific) project milestones  validation month 3 checkpoint: foundation validation c skills: build cross-platform system info tool rust skills: create async telemetry collector integration: simple tauri app with backend communication month 6 checkpoint: ml integration model development: working hardware performance predictor onnx deployment: model running in production environment data pipeline: end-to-end telemetry to prediction flowmonth 9 checkpoint: system integration complete backend: full telemetry collection and processing desktop frontend: production-quality user interface cross-platform: verified operation on windows, macos, linux month 12 checkpoint: production ready performance optimized: sub-second response times fully tested: comprehensive test coverage documentation: complete technical and user documentation patent ready: implementation matching patent specifications success strategies for masters students time management 20-hour weekly commitment: 3 hours daily  5 hours weekend intensive project-based learning: focus on building rather than just studying academic integration: use sise as thesiscapstone project if possible skill validation open source contributions: contribute to related rustc projects technical blog: document learning journey and technical decisions code portfolio: maintain clean github repository with progress demos career preparation industry networking: join rust, systems programming communities conference participation: present work at student conferences internship alignment: seek internships in systemsml engineering roles this roadmap provides a structured path from your current masters student status to becoming capable of implementing the complete sise system.",
      "the key is consistent daily practice combined with hands-on project work that incrementally builds toward the final goal."
    ],
    "words": [
      "sise",
      "learning",
      "roadmap",
      "master",
      "student",
      "system",
      "programming",
      "expert",
      "overview",
      "based",
      "sise",
      "project",
      "requirement",
      "current",
      "status",
      "master",
      "student",
      "here",
      "comprehensive",
      "learning",
      "roadmap",
      "build",
      "spec",
      "intelligence",
      "scoring",
      "engine",
      "project",
      "primarily",
      "us",
      "c",
      "rust",
      "python",
      "javascripttypescript",
      "tauri",
      "desktop",
      "frontend",
      "java",
      "required",
      "specific",
      "project",
      "though",
      "useful",
      "enterprise",
      "integration",
      "later",
      "phase",
      "<NUM>",
      "foundation",
      "building",
      "month",
      "<NUM>",
      "parallel",
      "learning",
      "approach",
      "maximum",
      "efficiency",
      "<NUM>.<NUM>",
      "core",
      "programming",
      "foundation",
      "week",
      "<NUM>",
      "c",
      "fundamental",
      "resource",
      "complete",
      "guide",
      "c",
      "programming",
      "foundation",
      "linkedin",
      "learning",
      "<NUM>",
      "c",
      "developer",
      "roadmap",
      "github<NUM>",
      "focus",
      "area",
      "basic",
      "syntax",
      "data",
      "type",
      "control",
      "structures<NUM>",
      "object-oriented",
      "programming",
      "concept",
      "memory",
      "management",
      "pointer",
      "reference",
      "standard",
      "template",
      "library",
      "stl",
      "basic",
      "practice",
      "build",
      "simple",
      "system",
      "monitor",
      "read",
      "cpumemory",
      "usage",
      "week",
      "<NUM>",
      "system",
      "programming",
      "c",
      "resource",
      "cross-platform",
      "system",
      "programming",
      "guide<NUM>",
      "introduction",
      "data",
      "structure",
      "algorithm",
      "c<NUM>",
      "focus",
      "area",
      "file",
      "io",
      "operations<NUM>",
      "cross-platform",
      "compatibility",
      "window",
      "macos",
      "linux",
      "system",
      "api",
      "interfacing<NUM>",
      "process",
      "thread",
      "managementpractice",
      "create",
      "cross-platform",
      "file",
      "system",
      "watcher",
      "week",
      "<NUM>",
      "rust",
      "basic",
      "resource",
      "rust",
      "programming",
      "language",
      "book<NUM>",
      "rust",
      "roadmap",
      "complete",
      "guide",
      "<NUM>",
      "focus",
      "area",
      "ownership",
      "borrowing",
      "system<NUM>",
      "structs",
      "enums",
      "pattern",
      "matching",
      "error",
      "handling",
      "result",
      "option",
      "type",
      "basic",
      "cargo",
      "package",
      "management",
      "practice",
      "rewrite",
      "file",
      "system",
      "watcher",
      "rust",
      "week",
      "<NUM>",
      "advanced",
      "rust",
      "concept",
      "resource",
      "rustling",
      "interactive",
      "exercises<NUM>",
      "rust",
      "example<NUM>",
      "focus",
      "area",
      "concurrency",
      "async",
      "programming<NUM>",
      "ffi",
      "foreign",
      "function",
      "interface",
      "c",
      "integration",
      "memory",
      "safety",
      "unsafe",
      "code",
      "block",
      "advanced",
      "pattern",
      "matching",
      "generic",
      "practice",
      "build",
      "multithreaded",
      "data",
      "processing",
      "pipeline",
      "week",
      "<NUM>",
      "web",
      "technology",
      "desktop",
      "development",
      "javascripttypescript",
      "modern",
      "es<NUM>",
      "feature",
      "asyncawait",
      "typescript",
      "fundamental",
      "type",
      "system",
      "react",
      "basic",
      "component",
      "architecture",
      "tauri",
      "framework",
      "tauri",
      "getting",
      "started",
      "guide<NUM>",
      "system",
      "tray",
      "integration<NUM>",
      "rust-javascript",
      "communication",
      "patterns<NUM>",
      "practice",
      "create",
      "simple",
      "desktop",
      "app",
      "tauri",
      "display",
      "system",
      "info<NUM>.<NUM>",
      "mathematics",
      "statistic",
      "foundation",
      "concurrent",
      "learning",
      "throughout",
      "phase",
      "<NUM>",
      "linear",
      "algebra",
      "vector",
      "matrix",
      "eigenvalue",
      "statistic",
      "descriptive",
      "statistic",
      "probability",
      "distribution",
      "calculus",
      "derivative",
      "optimization",
      "algorithm",
      "resource",
      "khan",
      "academy",
      "mit",
      "opencourseware",
      "phase",
      "<NUM>",
      "machine",
      "learning",
      "ai",
      "engineering",
      "month",
      "<NUM>",
      "<NUM>.<NUM>",
      "python",
      "machine",
      "learning",
      "resource",
      "machine",
      "learning",
      "engineer",
      "career",
      "track<NUM>",
      "python",
      "programming",
      "ml<NUM>",
      "focus",
      "area",
      "numpy",
      "panda",
      "matplotlib",
      "data",
      "manipulation",
      "scikit-learn",
      "classical",
      "ml",
      "algorithm",
      "tensorflowpytorch",
      "deep",
      "learning",
      "data",
      "preprocessing",
      "feature",
      "engineering<NUM>",
      "<NUM>.<NUM>",
      "ml",
      "model",
      "development",
      "classical",
      "algorithm",
      "regression",
      "linear",
      "logistic",
      "polynomial",
      "decision",
      "tree",
      "ensemble",
      "method",
      "random",
      "forest",
      "xgboost",
      "clustering",
      "algorithm",
      "k-means",
      "dbscan",
      "deep",
      "learning",
      "neural",
      "network",
      "fundamental",
      "lstm",
      "network",
      "time",
      "series",
      "prediction",
      "model",
      "evaluation",
      "validation",
      "techniques<NUM>",
      "<NUM>.<NUM>",
      "onnx",
      "runtime",
      "integration",
      "resource",
      "onnx",
      "runtime",
      "documentation<NUM>",
      "tutorial",
      "python",
      "onnx",
      "conversion<NUM>",
      "focus",
      "area",
      "converting",
      "pytorchtensorflow",
      "model",
      "onnx<NUM>onnx",
      "runtime",
      "c",
      "api",
      "integration<NUM>",
      "cross-platform",
      "model",
      "deployment<NUM>",
      "performance",
      "optimization",
      "technique",
      "practice",
      "project",
      "train",
      "hardware",
      "performance",
      "prediction",
      "model",
      "python",
      "export",
      "onnx",
      "integrate",
      "rustc",
      "backend",
      "phase",
      "<NUM>",
      "system",
      "integration",
      "advanced",
      "topic",
      "month",
      "<NUM>",
      "<NUM>.<NUM>",
      "advanced",
      "system",
      "programming",
      "hardware",
      "telemetry",
      "collection",
      "window",
      "performance",
      "counter",
      "api",
      "linux",
      "proc",
      "sys",
      "filesystem",
      "macos",
      "system_profiler",
      "sysctl",
      "cross-platform",
      "development",
      "cmake",
      "build",
      "system",
      "package",
      "manager",
      "vcpkg",
      "conan",
      "cicd",
      "multiple",
      "platforms<NUM>",
      "<NUM>.<NUM>",
      "real-time",
      "data",
      "processing",
      "rust",
      "ecosystem",
      "tokio",
      "async",
      "runtime",
      "concurrent",
      "processing<NUM>",
      "serde",
      "serializationdeserialization",
      "metrics-rs",
      "performance",
      "monitoring<NUM>",
      "opentelemetry",
      "integration",
      "distributed",
      "tracing",
      "metric",
      "collection<NUM>",
      "cross-language",
      "telemetry",
      "standardization",
      "<NUM>.<NUM>",
      "advanced",
      "desktop",
      "development",
      "tauri",
      "advanced",
      "feature",
      "custom",
      "system",
      "tray",
      "menus<NUM>",
      "background",
      "service",
      "integration",
      "auto-updating",
      "mechanisms<NUM>",
      "platform-specific",
      "optimization",
      "practice",
      "project",
      "build",
      "complete",
      "system",
      "monitoring",
      "dashboard",
      "real-time",
      "telemetry",
      "collection",
      "ml",
      "prediction",
      "cross-platform",
      "desktop",
      "interface.phase",
      "<NUM>",
      "production-ready",
      "development",
      "month",
      "<NUM>",
      "<NUM>.<NUM>",
      "software",
      "engineering",
      "best",
      "practice",
      "version",
      "control",
      "advanced",
      "git",
      "workflow",
      "branching",
      "strategy",
      "testing",
      "unit",
      "testing",
      "rustc",
      "integration",
      "testing",
      "documentation",
      "api",
      "documentation",
      "user",
      "guide",
      "code",
      "quality",
      "linting",
      "formatting",
      "code",
      "review",
      "<NUM>.<NUM>",
      "performance",
      "optimization",
      "profiling",
      "tool",
      "rust",
      "cargo",
      "flamegraph",
      "perf",
      "c",
      "intel",
      "vtune",
      "valgrind",
      "memory",
      "management",
      "efficient",
      "data",
      "structure",
      "cache-friendly",
      "algorithm",
      "concurrency",
      "lock-free",
      "programming",
      "async",
      "optimization",
      "<NUM>.<NUM>",
      "security",
      "privacy",
      "data",
      "protection",
      "encryption",
      "secure",
      "storage",
      "privacy-preserving",
      "ml",
      "federated",
      "learning",
      "concept",
      "security",
      "auditing",
      "common",
      "vulnerability",
      "secure",
      "coding",
      "practice",
      "capstone",
      "project",
      "complete",
      "sise",
      "prototype",
      "core",
      "feature",
      "implemented",
      "tested",
      "recommended",
      "learning",
      "schedule",
      "master",
      "student",
      "context",
      "semester-aligned",
      "approach",
      "semester",
      "<NUM>",
      "sep-dec",
      "phase",
      "<NUM>",
      "phase",
      "<NUM>",
      "part",
      "<NUM>",
      "focus",
      "fundamental",
      "lighter",
      "academic",
      "load",
      "build",
      "strong",
      "foundation",
      "system",
      "programming",
      "start",
      "ml",
      "concept",
      "alongside",
      "coursework",
      "winter",
      "break",
      "intensive",
      "phase",
      "<NUM>",
      "completion",
      "dedicated",
      "time",
      "hands-on",
      "ml",
      "project",
      "onnx",
      "runtime",
      "integration",
      "experiment",
      "semester",
      "<NUM>",
      "jan-may",
      "phase",
      "<NUM>",
      "phase",
      "<NUM>",
      "part",
      "<NUM>",
      "advanced",
      "topic",
      "managing",
      "coursework",
      "real-world",
      "project",
      "implementation",
      "summer",
      "break",
      "phase",
      "<NUM>",
      "completion",
      "portfoliofinal",
      "implementation",
      "optimization",
      "documentation",
      "presentation",
      "preparation",
      "key",
      "resource",
      "tool",
      "development",
      "environment",
      "setup",
      "rust",
      "toolchain",
      "curl",
      "proto",
      "http",
      "tlsv<NUM>.<NUM>",
      "http",
      "sh.rustup.rs",
      "sh",
      "node.js",
      "tauri",
      "frontend",
      "download",
      "nodejs.org",
      "lts",
      "version",
      "python",
      "ml",
      "environment",
      "conda",
      "create",
      "sise",
      "python<NUM>.<NUM>",
      "conda",
      "activate",
      "sise",
      "pip",
      "install",
      "torch",
      "tensorflow",
      "scikit-learn",
      "onnx",
      "onnxruntime",
      "c",
      "development",
      "tool",
      "window",
      "visual",
      "studio",
      "build",
      "tool",
      "linux",
      "build-essential",
      "cmake",
      "macos",
      "xcode",
      "command",
      "line",
      "tool",
      "essential",
      "learning",
      "platform",
      "programming",
      "github",
      "codespaces",
      "v",
      "code",
      "ml",
      "jupyter",
      "notebook",
      "google",
      "colab",
      "documentation",
      "rust",
      "doc",
      "c",
      "reference",
      "mdn",
      "practice",
      "leetcode",
      "algorithm",
      "exercism",
      "language-specific",
      "project",
      "milestone",
      "validation",
      "month",
      "<NUM>",
      "checkpoint",
      "foundation",
      "validation",
      "c",
      "skill",
      "build",
      "cross-platform",
      "system",
      "info",
      "tool",
      "rust",
      "skill",
      "create",
      "async",
      "telemetry",
      "collector",
      "integration",
      "simple",
      "tauri",
      "app",
      "backend",
      "communication",
      "month",
      "<NUM>",
      "checkpoint",
      "ml",
      "integration",
      "model",
      "development",
      "working",
      "hardware",
      "performance",
      "predictor",
      "onnx",
      "deployment",
      "model",
      "running",
      "production",
      "environment",
      "data",
      "pipeline",
      "end-to-end",
      "telemetry",
      "prediction",
      "flowmonth",
      "<NUM>",
      "checkpoint",
      "system",
      "integration",
      "complete",
      "backend",
      "full",
      "telemetry",
      "collection",
      "processing",
      "desktop",
      "frontend",
      "production-quality",
      "user",
      "interface",
      "cross-platform",
      "verified",
      "operation",
      "window",
      "macos",
      "linux",
      "month",
      "<NUM>",
      "checkpoint",
      "production",
      "ready",
      "performance",
      "optimized",
      "sub-second",
      "response",
      "time",
      "fully",
      "tested",
      "comprehensive",
      "test",
      "coverage",
      "documentation",
      "complete",
      "technical",
      "user",
      "documentation",
      "patent",
      "ready",
      "implementation",
      "matching",
      "patent",
      "specification",
      "success",
      "strategy",
      "master",
      "student",
      "time",
      "management",
      "<NUM>-hour",
      "weekly",
      "commitment",
      "<NUM>",
      "hour",
      "daily",
      "<NUM>",
      "hour",
      "weekend",
      "intensive",
      "project-based",
      "learning",
      "focus",
      "building",
      "rather",
      "studying",
      "academic",
      "integration",
      "use",
      "sise",
      "thesiscapstone",
      "project",
      "possible",
      "skill",
      "validation",
      "open",
      "source",
      "contribution",
      "contribute",
      "related",
      "rustc",
      "project",
      "technical",
      "blog",
      "document",
      "learning",
      "journey",
      "technical",
      "decision",
      "code",
      "portfolio",
      "maintain",
      "clean",
      "github",
      "repository",
      "progress",
      "demo",
      "career",
      "preparation",
      "industry",
      "networking",
      "join",
      "rust",
      "system",
      "programming",
      "community",
      "conference",
      "participation",
      "present",
      "work",
      "student",
      "conference",
      "internship",
      "alignment",
      "seek",
      "internship",
      "systemsml",
      "engineering",
      "role",
      "roadmap",
      "provides",
      "structured",
      "path",
      "current",
      "master",
      "student",
      "status",
      "becoming",
      "capable",
      "implementing",
      "complete",
      "sise",
      "system",
      "key",
      "consistent",
      "daily",
      "practice",
      "combined",
      "hands-on",
      "project",
      "work",
      "incrementally",
      "build",
      "toward",
      "final",
      "goal"
    ],
    "num_sentences": 7,
    "num_words": 934,
    "chunks": [
      {
        "sentences": [
          "sise learning roadmap: from masters student to systems programming expert overview based on your sise project requirements and current status as a masters student, heres a comprehensive learning roadmap to build the spec intelligence scoring engine.",
          "the project primarily uses c, rust, python, and javascripttypescript with tauri for the desktop frontend.",
          "java is not required for this specific project, though it can be useful for enterprise integrations later."
        ],
        "words": [
          "sise",
          "learning",
          "roadmap:",
          "from",
          "masters",
          "student",
          "to",
          "systems",
          "programming",
          "expert",
          "overview",
          "based",
          "on",
          "your",
          "sise",
          "project",
          "requirements",
          "and",
          "current",
          "status",
          "as",
          "a",
          "masters",
          "student,",
          "heres",
          "a",
          "comprehensive",
          "learning",
          "roadmap",
          "to",
          "build",
          "the",
          "spec",
          "intelligence",
          "scoring",
          "engine.",
          "the",
          "project",
          "primarily",
          "uses",
          "c,",
          "rust,",
          "python,",
          "and",
          "javascripttypescript",
          "with",
          "tauri",
          "for",
          "the",
          "desktop",
          "frontend.",
          "java",
          "is",
          "not",
          "required",
          "for",
          "this",
          "specific",
          "project,",
          "though",
          "it",
          "can",
          "be",
          "useful",
          "for",
          "enterprise",
          "integrations",
          "later."
        ],
        "chunk_id": 1,
        "entities": {},
        "summary": "インテリジェンスススコアリングエンジンを構築するための包括的なインテリジェンス学習ロードマップです。 プロジェクトは主に c、 rust、 python、 javascripttypescript をデスクトップフロントエンドの tauri"
      },
      {
        "sentences": [
          "phase 1 foundation building months 13 parallel learning approach for maximum efficiency 1.1 core programming foundations week 12 c fundamentals resources: complete guide to c programming foundations linkedin learning)54 c developer roadmap on github51 focus areas: basic syntax, data types, control structures48 object-oriented programming concepts memory management (pointers, references) standard template library stl) basics practice: build a simple system monitor that reads cpumemory usage week 34 system programming in c resources: cross-platform system programming guide65 introduction to data structures and algorithms in c60 focus areas: file io operations65 cross-platform compatibility windows, macos, linux) system api interfacing30 process and thread managementpractice: create a cross-platform file system watcher week 56 rust basics resources: the rust programming language book55 rust roadmap: complete guide 202552 focus areas: ownership and borrowing system52 structs, enums, and pattern matching error handling with result and option types basic cargo package management practice: rewrite the file system watcher in rust week 78 advanced rust concepts resources: rustlings interactive exercises58 rust by example55 focus areas: concurrency and async programming52 ffi foreign function interface) for c integration memory safety and unsafe code blocks advanced pattern matching and generics practice: build a multithreaded data processing pipeline week 912 web technologies  desktop development javascripttypescript: modern es6 features, asyncawait typescript fundamentals and type system react basics and component architecture tauri framework: tauri getting started guide6366 system tray integration39 rust-javascript communication patterns63 practice: create a simple desktop app with tauri that displays system info1.2 mathematics  statistics foundation concurrent learning throughout phase 1 linear algebra: vectors, matrices, eigenvalues statistics: descriptive statistics, probability distributions calculus: derivatives for optimization algorithms resources: khan academy, mit opencourseware phase 2 machine learning  ai engineering months 46 2.1 python for machine learning resources: machine learning engineer career track53 python programming for ml5056 focus areas: numpy, pandas, matplotlib for data manipulation scikit-learn for classical ml algorithms tensorflowpytorch for deep learning data preprocessing and feature engineering56 2.2 ml model development classical algorithms: regression (linear, logistic, polynomial) decision trees and ensemble methods random forest, xgboost) clustering algorithms k-means, dbscan deep learning: neural networks fundamentals lstm networks for time series prediction model evaluation and validation techniques50 2.3 onnx runtime integration resources: onnx runtime documentation70 tutorial: python to onnx conversion67 focus areas: converting pytorchtensorflow models to onnx6467onnx runtime c api integration64 cross-platform model deployment64 performance optimization techniques practice project: train a hardware performance prediction model in python, export to onnx, and integrate with rustc backend."
        ],
        "words": [
          "phase",
          "1",
          "foundation",
          "building",
          "months",
          "13",
          "parallel",
          "learning",
          "approach",
          "for",
          "maximum",
          "efficiency",
          "1.1",
          "core",
          "programming",
          "foundations",
          "week",
          "12",
          "c",
          "fundamentals",
          "resources:",
          "complete",
          "guide",
          "to",
          "c",
          "programming",
          "foundations",
          "linkedin",
          "learning)54",
          "c",
          "developer",
          "roadmap",
          "on",
          "github51",
          "focus",
          "areas:",
          "basic",
          "syntax,",
          "data",
          "types,",
          "control",
          "structures48",
          "object-oriented",
          "programming",
          "concepts",
          "memory",
          "management",
          "(pointers,",
          "references)",
          "standard",
          "template",
          "library",
          "stl)",
          "basics",
          "practice:",
          "build",
          "a",
          "simple",
          "system",
          "monitor",
          "that",
          "reads",
          "cpumemory",
          "usage",
          "week",
          "34",
          "system",
          "programming",
          "in",
          "c",
          "resources:",
          "cross-platform",
          "system",
          "programming",
          "guide65",
          "introduction",
          "to",
          "data",
          "structures",
          "and",
          "algorithms",
          "in",
          "c60",
          "focus",
          "areas:",
          "file",
          "io",
          "operations65",
          "cross-platform",
          "compatibility",
          "windows,",
          "macos,",
          "linux)",
          "system",
          "api",
          "interfacing30",
          "process",
          "and",
          "thread",
          "managementpractice:",
          "create",
          "a",
          "cross-platform",
          "file",
          "system",
          "watcher",
          "week",
          "56",
          "rust",
          "basics",
          "resources:",
          "the",
          "rust",
          "programming",
          "language",
          "book55",
          "rust",
          "roadmap:",
          "complete",
          "guide",
          "202552",
          "focus",
          "areas:",
          "ownership",
          "and",
          "borrowing",
          "system52",
          "structs,",
          "enums,",
          "and",
          "pattern",
          "matching",
          "error",
          "handling",
          "with",
          "result",
          "and",
          "option",
          "types",
          "basic",
          "cargo",
          "package",
          "management",
          "practice:",
          "rewrite",
          "the",
          "file",
          "system",
          "watcher",
          "in",
          "rust",
          "week",
          "78",
          "advanced",
          "rust",
          "concepts",
          "resources:",
          "rustlings",
          "interactive",
          "exercises58",
          "rust",
          "by",
          "example55",
          "focus",
          "areas:",
          "concurrency",
          "and",
          "async",
          "programming52",
          "ffi",
          "foreign",
          "function",
          "interface)",
          "for",
          "c",
          "integration",
          "memory",
          "safety",
          "and",
          "unsafe",
          "code",
          "blocks",
          "advanced",
          "pattern",
          "matching",
          "and",
          "generics",
          "practice:",
          "build",
          "a",
          "multithreaded",
          "data",
          "processing",
          "pipeline",
          "week",
          "912",
          "web",
          "technologies",
          "desktop",
          "development",
          "javascripttypescript:",
          "modern",
          "es6",
          "features,",
          "asyncawait",
          "typescript",
          "fundamentals",
          "and",
          "type",
          "system",
          "react",
          "basics",
          "and",
          "component",
          "architecture",
          "tauri",
          "framework:",
          "tauri",
          "getting",
          "started",
          "guide6366",
          "system",
          "tray",
          "integration39",
          "rust-javascript",
          "communication",
          "patterns63",
          "practice:",
          "create",
          "a",
          "simple",
          "desktop",
          "app",
          "with",
          "tauri",
          "that",
          "displays",
          "system",
          "info1.2",
          "mathematics",
          "statistics",
          "foundation",
          "concurrent",
          "learning",
          "throughout",
          "phase",
          "1",
          "linear",
          "algebra:",
          "vectors,",
          "matrices,",
          "eigenvalues",
          "statistics:",
          "descriptive",
          "statistics,",
          "probability",
          "distributions",
          "calculus:",
          "derivatives",
          "for",
          "optimization",
          "algorithms",
          "resources:",
          "khan",
          "academy,",
          "mit",
          "opencourseware",
          "phase",
          "2",
          "machine",
          "learning",
          "ai",
          "engineering",
          "months",
          "46",
          "2.1",
          "python",
          "for",
          "machine",
          "learning",
          "resources:",
          "machine",
          "learning",
          "engineer",
          "career",
          "track53",
          "python",
          "programming",
          "for",
          "ml5056",
          "focus",
          "areas:",
          "numpy,",
          "pandas,",
          "matplotlib",
          "for",
          "data",
          "manipulation",
          "scikit-learn",
          "for",
          "classical",
          "ml",
          "algorithms",
          "tensorflowpytorch",
          "for",
          "deep",
          "learning",
          "data",
          "preprocessing",
          "and",
          "feature",
          "engineering56",
          "2.2",
          "ml",
          "model",
          "development",
          "classical",
          "algorithms:",
          "regression",
          "(linear,",
          "logistic,",
          "polynomial)",
          "decision",
          "trees",
          "and",
          "ensemble",
          "methods",
          "random",
          "forest,",
          "xgboost)",
          "clustering",
          "algorithms",
          "k-means,",
          "dbscan",
          "deep",
          "learning:",
          "neural",
          "networks",
          "fundamentals",
          "lstm",
          "networks",
          "for",
          "time",
          "series",
          "prediction",
          "model",
          "evaluation",
          "and",
          "validation",
          "techniques50",
          "2.3",
          "onnx",
          "runtime",
          "integration",
          "resources:",
          "onnx",
          "runtime",
          "documentation70",
          "tutorial:",
          "python",
          "to",
          "onnx",
          "conversion67",
          "focus",
          "areas:",
          "converting",
          "pytorchtensorflow",
          "models",
          "to",
          "onnx6467onnx",
          "runtime",
          "c",
          "api",
          "integration64",
          "cross-platform",
          "model",
          "deployment64",
          "performance",
          "optimization",
          "techniques",
          "practice",
          "project:",
          "train",
          "a",
          "hardware",
          "performance",
          "prediction",
          "model",
          "in",
          "python,",
          "export",
          "to",
          "onnx,",
          "and",
          "integrate",
          "with",
          "rustc",
          "backend."
        ],
        "chunk_id": 2,
        "entities": {},
        "summary": "核心编程基础(英语:core programming)基础(英语:core programming)基础(英语:core programming)基础(英语:core programming)基础(英语:core programming)基础(英语:core programming)基础(英语:core programmi"
      },
      {
        "sentences": [
          "phase 3 systems integration  advanced topics months 79 3.1 advanced systems programming hardware telemetry collection: windows performance counters api linux proc and sys filesystem macos system_profiler and sysctl cross-platform development: cmake build systems package managers (vcpkg, conan) cicd for multiple platforms68 3.2 real-time data processing rust ecosystem: tokio async runtime for concurrent processing29 serde for serializationdeserialization metrics-rs for performance monitoring29 opentelemetry integration: distributed tracing and metrics collection16 cross-language telemetry standardization 3.3 advanced desktop development tauri advanced features: custom system tray menus39 background service integration auto-updating mechanisms63 platform-specific optimizations practice project: build a complete system monitoring dashboard with real-time telemetry collection, ml prediction, and cross-platform desktop interface.phase 4 production-ready development months 1012 4.1 software engineering best practices version control: advanced git workflows, branching strategies testing: unit testing in rustc, integration testing documentation: api documentation, user guides code quality: linting, formatting, code reviews 4.2 performance optimization profiling tools: rust: cargo flamegraph, perf c intel vtune, valgrind memory management: efficient data structures, cache-friendly algorithms concurrency: lock-free programming, async optimization 4.3 security  privacy data protection: encryption, secure storage privacy-preserving ml: federated learning concepts security auditing: common vulnerabilities, secure coding practices capstone project: complete sise prototype with all core features implemented and tested."
        ],
        "words": [
          "phase",
          "3",
          "systems",
          "integration",
          "advanced",
          "topics",
          "months",
          "79",
          "3.1",
          "advanced",
          "systems",
          "programming",
          "hardware",
          "telemetry",
          "collection:",
          "windows",
          "performance",
          "counters",
          "api",
          "linux",
          "proc",
          "and",
          "sys",
          "filesystem",
          "macos",
          "system_profiler",
          "and",
          "sysctl",
          "cross-platform",
          "development:",
          "cmake",
          "build",
          "systems",
          "package",
          "managers",
          "(vcpkg,",
          "conan)",
          "cicd",
          "for",
          "multiple",
          "platforms68",
          "3.2",
          "real-time",
          "data",
          "processing",
          "rust",
          "ecosystem:",
          "tokio",
          "async",
          "runtime",
          "for",
          "concurrent",
          "processing29",
          "serde",
          "for",
          "serializationdeserialization",
          "metrics-rs",
          "for",
          "performance",
          "monitoring29",
          "opentelemetry",
          "integration:",
          "distributed",
          "tracing",
          "and",
          "metrics",
          "collection16",
          "cross-language",
          "telemetry",
          "standardization",
          "3.3",
          "advanced",
          "desktop",
          "development",
          "tauri",
          "advanced",
          "features:",
          "custom",
          "system",
          "tray",
          "menus39",
          "background",
          "service",
          "integration",
          "auto-updating",
          "mechanisms63",
          "platform-specific",
          "optimizations",
          "practice",
          "project:",
          "build",
          "a",
          "complete",
          "system",
          "monitoring",
          "dashboard",
          "with",
          "real-time",
          "telemetry",
          "collection,",
          "ml",
          "prediction,",
          "and",
          "cross-platform",
          "desktop",
          "interface.phase",
          "4",
          "production-ready",
          "development",
          "months",
          "1012",
          "4.1",
          "software",
          "engineering",
          "best",
          "practices",
          "version",
          "control:",
          "advanced",
          "git",
          "workflows,",
          "branching",
          "strategies",
          "testing:",
          "unit",
          "testing",
          "in",
          "rustc,",
          "integration",
          "testing",
          "documentation:",
          "api",
          "documentation,",
          "user",
          "guides",
          "code",
          "quality:",
          "linting,",
          "formatting,",
          "code",
          "reviews",
          "4.2",
          "performance",
          "optimization",
          "profiling",
          "tools:",
          "rust:",
          "cargo",
          "flamegraph,",
          "perf",
          "c",
          "intel",
          "vtune,",
          "valgrind",
          "memory",
          "management:",
          "efficient",
          "data",
          "structures,",
          "cache-friendly",
          "algorithms",
          "concurrency:",
          "lock-free",
          "programming,",
          "async",
          "optimization",
          "4.3",
          "security",
          "privacy",
          "data",
          "protection:",
          "encryption,",
          "secure",
          "storage",
          "privacy-preserving",
          "ml:",
          "federated",
          "learning",
          "concepts",
          "security",
          "auditing:",
          "common",
          "vulnerabilities,",
          "secure",
          "coding",
          "practices",
          "capstone",
          "project:",
          "complete",
          "sise",
          "prototype",
          "with",
          "all",
          "core",
          "features",
          "implemented",
          "and",
          "tested."
        ],
        "chunk_id": 3,
        "entities": {
          "DATE": [
            "1012"
          ]
        },
        "summary": "Phase 3 Systemintegration fortgeschrittene Themen Monate 79 3.1 fortgeschrittene Systemprogrammierung Hardware Telemetrie Sammlung: Windows Performance Counters api linux proc und sys filesystem macos system_profiler und sysctl Cross-Plattform-En"
      },
      {
        "sentences": [
          "recommended learning schedule masters student context) semester-aligned approach semester 1 sep-dec): phase 1  phase 2 part 1 focus on fundamentals during lighter academic load build strong foundation in systems programming start ml concepts alongside coursework winter break: intensive phase 2 completion dedicated time for hands-on ml projects onnx runtime integration experiments semester 2 jan-may): phase 3  phase 4 part 1 advanced topics while managing coursework real-world project implementation summer break: phase 4 completion  portfoliofinal implementation and optimization documentation and presentation preparation key resources  tools development environment setup  rust toolchain curl --proto https --tlsv1.2 -ssf https:sh.rustup.rs  sh  node.js for tauri frontend  download from nodejs.org (lts version)  python ml environment conda create -n sise python3.11 conda activate sise pip install torch tensorflow scikit-learn onnx onnxruntime  c development tools  windows: visual studio build tools  linux: build-essential, cmake  macos: xcode command line tools essential learning platforms programming: github codespaces, vs code ml: jupyter notebooks, google colab documentation: rust docs, c reference, mdn practice: leetcode (algorithms), exercism (language-specific) project milestones  validation month 3 checkpoint: foundation validation c skills: build cross-platform system info tool rust skills: create async telemetry collector integration: simple tauri app with backend communication month 6 checkpoint: ml integration model development: working hardware performance predictor onnx deployment: model running in production environment data pipeline: end-to-end telemetry to prediction flowmonth 9 checkpoint: system integration complete backend: full telemetry collection and processing desktop frontend: production-quality user interface cross-platform: verified operation on windows, macos, linux month 12 checkpoint: production ready performance optimized: sub-second response times fully tested: comprehensive test coverage documentation: complete technical and user documentation patent ready: implementation matching patent specifications success strategies for masters students time management 20-hour weekly commitment: 3 hours daily  5 hours weekend intensive project-based learning: focus on building rather than just studying academic integration: use sise as thesiscapstone project if possible skill validation open source contributions: contribute to related rustc projects technical blog: document learning journey and technical decisions code portfolio: maintain clean github repository with progress demos career preparation industry networking: join rust, systems programming communities conference participation: present work at student conferences internship alignment: seek internships in systemsml engineering roles this roadmap provides a structured path from your current masters student status to becoming capable of implementing the complete sise system."
        ],
        "words": [
          "recommended",
          "learning",
          "schedule",
          "masters",
          "student",
          "context)",
          "semester-aligned",
          "approach",
          "semester",
          "1",
          "sep-dec):",
          "phase",
          "1",
          "phase",
          "2",
          "part",
          "1",
          "focus",
          "on",
          "fundamentals",
          "during",
          "lighter",
          "academic",
          "load",
          "build",
          "strong",
          "foundation",
          "in",
          "systems",
          "programming",
          "start",
          "ml",
          "concepts",
          "alongside",
          "coursework",
          "winter",
          "break:",
          "intensive",
          "phase",
          "2",
          "completion",
          "dedicated",
          "time",
          "for",
          "hands-on",
          "ml",
          "projects",
          "onnx",
          "runtime",
          "integration",
          "experiments",
          "semester",
          "2",
          "jan-may):",
          "phase",
          "3",
          "phase",
          "4",
          "part",
          "1",
          "advanced",
          "topics",
          "while",
          "managing",
          "coursework",
          "real-world",
          "project",
          "implementation",
          "summer",
          "break:",
          "phase",
          "4",
          "completion",
          "portfoliofinal",
          "implementation",
          "and",
          "optimization",
          "documentation",
          "and",
          "presentation",
          "preparation",
          "key",
          "resources",
          "tools",
          "development",
          "environment",
          "setup",
          "rust",
          "toolchain",
          "curl",
          "--proto",
          "https",
          "--tlsv1.2",
          "-ssf",
          "https:sh.rustup.rs",
          "sh",
          "node.js",
          "for",
          "tauri",
          "frontend",
          "download",
          "from",
          "nodejs.org",
          "(lts",
          "version)",
          "python",
          "ml",
          "environment",
          "conda",
          "create",
          "-n",
          "sise",
          "python3.11",
          "conda",
          "activate",
          "sise",
          "pip",
          "install",
          "torch",
          "tensorflow",
          "scikit-learn",
          "onnx",
          "onnxruntime",
          "c",
          "development",
          "tools",
          "windows:",
          "visual",
          "studio",
          "build",
          "tools",
          "linux:",
          "build-essential,",
          "cmake",
          "macos:",
          "xcode",
          "command",
          "line",
          "tools",
          "essential",
          "learning",
          "platforms",
          "programming:",
          "github",
          "codespaces,",
          "vs",
          "code",
          "ml:",
          "jupyter",
          "notebooks,",
          "google",
          "colab",
          "documentation:",
          "rust",
          "docs,",
          "c",
          "reference,",
          "mdn",
          "practice:",
          "leetcode",
          "(algorithms),",
          "exercism",
          "(language-specific)",
          "project",
          "milestones",
          "validation",
          "month",
          "3",
          "checkpoint:",
          "foundation",
          "validation",
          "c",
          "skills:",
          "build",
          "cross-platform",
          "system",
          "info",
          "tool",
          "rust",
          "skills:",
          "create",
          "async",
          "telemetry",
          "collector",
          "integration:",
          "simple",
          "tauri",
          "app",
          "with",
          "backend",
          "communication",
          "month",
          "6",
          "checkpoint:",
          "ml",
          "integration",
          "model",
          "development:",
          "working",
          "hardware",
          "performance",
          "predictor",
          "onnx",
          "deployment:",
          "model",
          "running",
          "in",
          "production",
          "environment",
          "data",
          "pipeline:",
          "end-to-end",
          "telemetry",
          "to",
          "prediction",
          "flowmonth",
          "9",
          "checkpoint:",
          "system",
          "integration",
          "complete",
          "backend:",
          "full",
          "telemetry",
          "collection",
          "and",
          "processing",
          "desktop",
          "frontend:",
          "production-quality",
          "user",
          "interface",
          "cross-platform:",
          "verified",
          "operation",
          "on",
          "windows,",
          "macos,",
          "linux",
          "month",
          "12",
          "checkpoint:",
          "production",
          "ready",
          "performance",
          "optimized:",
          "sub-second",
          "response",
          "times",
          "fully",
          "tested:",
          "comprehensive",
          "test",
          "coverage",
          "documentation:",
          "complete",
          "technical",
          "and",
          "user",
          "documentation",
          "patent",
          "ready:",
          "implementation",
          "matching",
          "patent",
          "specifications",
          "success",
          "strategies",
          "for",
          "masters",
          "students",
          "time",
          "management",
          "20-hour",
          "weekly",
          "commitment:",
          "3",
          "hours",
          "daily",
          "5",
          "hours",
          "weekend",
          "intensive",
          "project-based",
          "learning:",
          "focus",
          "on",
          "building",
          "rather",
          "than",
          "just",
          "studying",
          "academic",
          "integration:",
          "use",
          "sise",
          "as",
          "thesiscapstone",
          "project",
          "if",
          "possible",
          "skill",
          "validation",
          "open",
          "source",
          "contributions:",
          "contribute",
          "to",
          "related",
          "rustc",
          "projects",
          "technical",
          "blog:",
          "document",
          "learning",
          "journey",
          "and",
          "technical",
          "decisions",
          "code",
          "portfolio:",
          "maintain",
          "clean",
          "github",
          "repository",
          "with",
          "progress",
          "demos",
          "career",
          "preparation",
          "industry",
          "networking:",
          "join",
          "rust,",
          "systems",
          "programming",
          "communities",
          "conference",
          "participation:",
          "present",
          "work",
          "at",
          "student",
          "conferences",
          "internship",
          "alignment:",
          "seek",
          "internships",
          "in",
          "systemsml",
          "engineering",
          "roles",
          "this",
          "roadmap",
          "provides",
          "a",
          "structured",
          "path",
          "from",
          "your",
          "current",
          "masters",
          "student",
          "status",
          "to",
          "becoming",
          "capable",
          "of",
          "implementing",
          "the",
          "complete",
          "sise",
          "system."
        ],
        "chunk_id": 4,
        "entities": {},
        "summary": "zalecany harmonogram nauki masters student context) semester-aligned approach semester 1 sep-dec): phase 1 phase 2 part 1 focus on fundamentals during lighter academic load build strong foundation in systems programming start ml concepts alongside coursework winter break: intensive"
      },
      {
        "sentences": [
          "the key is consistent daily practice combined with hands-on project work that incrementally builds toward the final goal."
        ],
        "words": [
          "the",
          "key",
          "is",
          "consistent",
          "daily",
          "practice",
          "combined",
          "with",
          "hands-on",
          "project",
          "work",
          "that",
          "incrementally",
          "builds",
          "toward",
          "the",
          "final",
          "goal."
        ],
        "chunk_id": 5,
        "entities": {},
        "summary": "the key is consistent daily practice combined with hands-on project work that incrementally builds toward the final goal."
      }
    ],
    "doc_summary": "sise learning roadmap: from masters student to systems programming expert overview based on your sise project requirements and current status as a masters student, heres a comprehensive learning roadmap to build the spec intelligence scoring engine",
    "entities": {
      "DATE": [
        "1012"
      ]
    }
  },
  {
    "doc_id": "LinuxInstallation.pdf",
    "raw_text": "CA – 1 – Linux Installation (Red Hat 6)\nName:- Akarsh Mishra\nReg. No:- 12528244Here is the step-by-step process to install the Linux Operating System on the\nvirtual machine so follow the-\nFirst we will open the “VMWare Workstation 17 Pro”\nThis is the window you will get when you open the first step, here are\nthree options “Create a New Virtual Machine”, “Open a Virtual\nMachine”, and “Connect to a Remote Server”.\nOn the left side there is a panel which is named as Library, where all\nthe available and all created Virtual Machines.\nOn the main window where the current Virtual Machine’s Name and\ndetails.In the second step will click on the “Create a New Virtual Machine”\nthen this window will be opened-\nHere we can see that there is a menu is opened where two radio\nbuttons are available-\nTypical (recommended)\nCustom (advanced)\nSo for ease we will choose the recommended settings in installation.\nNow choose the Typical options and click next button.In this window you will find-out that the installation wizard had a\nnumerous number of options Be Careful Here-\nThis Wizard had various options now what you have to do please be\ncautious about selections.First choose the Installer disc image file(iso) option –\nAnd there will we select the iso files of the “Linux Distribution”.\nFirst what is ISO file:\nIt creates a complete image of an optical disc, including its file\nand directory structure, and is used to make digital copies for\ndistribution or installation of software.Now we will click on the browse button to select the Linux Distribution\nThe current linux distributions is contained in 3 parts.\nThis menu will be opened and then you have to select the first ISO\nand click on open.\nThe new installation Wizard would be open and we have to select\nvarious options.Here we have to select the Linux Distribution and Version of the\nDistribution:-\nCheck on the LINUX, and then go and select the version :-\nRed Hat Linux\nAnd then click on Next.This wizard will opened:-\nNow give the name “Virtual machine name:”\nand Click Next.This is how we Change the name-So in this step we will decide the Disk Capacity\nHere we will choose the by default 8 GB Disk SIZE.\nand let all other things as it is and press the next button.This wizard tells about the specifications of the Virtual Machine\nLike-\nNAME, LOCATION, VERSION, OPERATION SYSTEM, HARD DISK,\nMEMORY, NETWORK ADAPTER etc.\nSo now click on the Customize Hardware Option to change the\nspecifications.When you click the Customize Hardware this menu will be opened-\nBy the way this step can be performed after the creation of the\nVirtual Machine but if you want to do it now you can do here and\nthat would be easy as well-\nHere we will change the memory size according to need.And now we will increase the numbers of the processors which we\ngoing to assign the Virtual Machine-\nOn the left panel you need to click on the Processors.In this step we will assign the numbers of processors : 2\nAnd numbers of cores per processor : 4\nMake the changes according to your Host’s System Specification.After this we click on done then this screen will be opened :-\nSo we can see that the new window appears Name of the Virtual\nMachine shown at the bar.\nIn that description of the current machine is also showed up\nspecifications of the VM.\nThere is two options\n1. “Power on this virtual machine”\n2. “Edit virtual machine setting”When we click on the Edit the same specification window opens\nHere things are same to edit details.Now we will click on the “Power on this virtual machine” the left\ninstallation part would be start-\nThen after hitting enter the visual installation interface would be open-\nAnd we will choose the skip media test by using keystroke of Left Key.Now you will see a Window where the details of Red Hat Linux\nInstallations Guide is there and two buttons with HELP and Release\nNotes we don’t have to do anything with them so we will focus on the\nnext button and press it.\nHere you can see that there is two buttons Next and back,\nwe will click on the Next button and go with the flow of installation.Now we see there is an option to choose the Language Selection\nMenu here we will choose ENGLISH(English).\nAnd Click on next so now we have to select the Keyboard\nConfiguration i.e. the type of your Keyboard-After KeyBoard Configuration we will go for Mouse Configurations\nbasically we don’t have to do anything here just click on the next\nNow just choose the Type of Installations, We don’t change anything\nhere Continue on clicking Next-So here we have to tackle with DISK PARTITIONING -\nDon’t change anything just click on the next-\nWhen we will click on the next it will show a warning that for\ninitializing this drive we have to erase everything first-There is the automatic partitioning portions comes we don’t have to\nchange anything so just click on next-\nAnd we will see another warning -\nJust click on yes and next-Boot Loader Configuration-\nDon’t have to do anything here again just click on next for\nrecommended settings-\nHere is the network configuration part – just HIT next :Firewall Configuration-\nJust check all the incoming connections if you want-\nAdditional Language Support:- Just choose ENG and go ahedTime Zone Selection-\nChoose Asia/Calcutta and hit NEXT\nNow Set the root password and never forget that – for ex. root123Here just click on the next and accept the current package list-\nAgain press next button-Here the Packages would be installed and here comes and important\npart-Now you will see there is a prompt on the screen that Change\nCDROM and insert the Disc 2 to continue-\nNow what we have to do just do what I have done-\nIn the VMWare Window >> Removable Devices >> CD/DVD >> SettingsThis window will opened now click on the USE ISO IMAGE-\nAnd choose the 2nd file which is the 2nd iso file of the linux distribution.And click open and OK to the menu and then we have to the same-\nVMWare Window>> VM >> Removable Devices >> CD/DVD >> Connect\nAnd the process starts again and ask for the 3rd and last file.After few seconds there would be the same prompt window-\nLike this for asking the last file-\nAnd we will do the same as we have done earlier -Do not change any settings here just click on the next and go Ahed-After Moniter Configuration click on next and wait for next screen-\nNow click on next and don’t change any setting of Graphics because it\nautomatically adjusted with the availabilities.Now the last exit button would be appear so what you have to do just\nclick on the exit and wait for the response-\nAfter some time, this screen will be shown-Now the VM would automatically restart and this window will open\nthis is boot menu-\nPress “Enter” or automatically it will choose now it will check all the\ndependencies-For new user the welcome and user setting screen will open-\nNow click on the forward button,\nThis is an important window create you username and password don’t\nforget it just fill the details and click Forward-Like this, I have filled all the things and clicked on Forward-\nAnd choose the time and date just click on forward.Click on forward and go for the next step\nFor now don’t register this server with the RED HAT Network for easy\ninstallation.Now again click on the forward button that’s it-\nThen finish the SETUP and then click forward-\nThis is the last step of the installation.Enter your credentials and then password\nNow just hit ENTER and see the magic-This is the Homepage of the RED HAT LINUX 6 after installation.\nNow we will see how to power it off,Just click on the power off button and this screen will again comes\nthis is how the installation is done.\nNow we only have to login and use the RHL 6.\nThank You for Following the\nInstallation Guide of RHL6.",
    "file_type": "pdf",
    "length": 1364,
    "cleaned_text": "ca  1  linux installation (red hat 6) name:- akarsh mishra reg. no:- 12528244here is the step-by-step process to install the linux operating system on the virtual machine so follow the- first we will open the vmware workstation 17 pro this is the window you will get when you open the first step, here are three options create a new virtual machine, open a virtual machine, and connect to a remote server. on the left side there is a panel which is named as library, where all the available and all created virtual machines. on the main window where the current virtual machines name and details.in the second step will click on the create a new virtual machine then this window will be opened- here we can see that there is a menu is opened where two radio buttons are available- typical (recommended) custom (advanced) so for ease we will choose the recommended settings in installation. now choose the typical options and click next button.in this window you will find-out that the installation wizard had a numerous number of options be careful here- this wizard had various options now what you have to do please be cautious about selections.first choose the installer disc image file(iso) option  and there will we select the iso files of the linux distribution. first what is iso file: it creates a complete image of an optical disc, including its file and directory structure, and is used to make digital copies for distribution or installation of software.now we will click on the browse button to select the linux distribution the current linux distributions is contained in 3 parts. this menu will be opened and then you have to select the first iso and click on open. the new installation wizard would be open and we have to select various options.here we have to select the linux distribution and version of the distribution:- check on the linux, and then go and select the version :- red hat linux and then click on next.this wizard will opened:- now give the name virtual machine name: and click next.this is how we change the name-so in this step we will decide the disk capacity here we will choose the by default 8 gb disk size. and let all other things as it is and press the next button.this wizard tells about the specifications of the virtual machine like- name, location, version, operation system, hard disk, memory, network adapter etc. so now click on the customize hardware option to change the specifications.when you click the customize hardware this menu will be opened- by the way this step can be performed after the creation of the virtual machine but if you want to do it now you can do here and that would be easy as well- here we will change the memory size according to need.and now we will increase the numbers of the processors which we going to assign the virtual machine- on the left panel you need to click on the processors.in this step we will assign the numbers of processors : 2 and numbers of cores per processor : 4 make the changes according to your hosts system specification.after this we click on done then this screen will be opened :- so we can see that the new window appears name of the virtual machine shown at the bar. in that description of the current machine is also showed up specifications of the vm. there is two options 1. power on this virtual machine 2. edit virtual machine settingwhen we click on the edit the same specification window opens here things are same to edit details.now we will click on the power on this virtual machine the left installation part would be start- then after hitting enter the visual installation interface would be open- and we will choose the skip media test by using keystroke of left key.now you will see a window where the details of red hat linux installations guide is there and two buttons with help and release notes we dont have to do anything with them so we will focus on the next button and press it. here you can see that there is two buttons next and back, we will click on the next button and go with the flow of installation.now we see there is an option to choose the language selection menu here we will choose english(english). and click on next so now we have to select the keyboard configuration i.e. the type of your keyboard-after keyboard configuration we will go for mouse configurations basically we dont have to do anything here just click on the next now just choose the type of installations, we dont change anything here continue on clicking next-so here we have to tackle with disk partitioning - dont change anything just click on the next- when we will click on the next it will show a warning that for initializing this drive we have to erase everything first-there is the automatic partitioning portions comes we dont have to change anything so just click on next- and we will see another warning - just click on yes and next-boot loader configuration- dont have to do anything here again just click on next for recommended settings- here is the network configuration part  just hit next :firewall configuration- just check all the incoming connections if you want- additional language support:- just choose eng and go ahedtime zone selection- choose asiacalcutta and hit next now set the root password and never forget that  for ex. root123here just click on the next and accept the current package list- again press next button-here the packages would be installed and here comes and important part-now you will see there is a prompt on the screen that change cdrom and insert the disc 2 to continue- now what we have to do just do what i have done- in the vmware window  removable devices  cddvd  settingsthis window will opened now click on the use iso image- and choose the 2nd file which is the 2nd iso file of the linux distribution.and click open and ok to the menu and then we have to the same- vmware window vm  removable devices  cddvd  connect and the process starts again and ask for the 3rd and last file.after few seconds there would be the same prompt window- like this for asking the last file- and we will do the same as we have done earlier -do not change any settings here just click on the next and go ahed-after moniter configuration click on next and wait for next screen- now click on next and dont change any setting of graphics because it automatically adjusted with the availabilities.now the last exit button would be appear so what you have to do just click on the exit and wait for the response- after some time, this screen will be shown-now the vm would automatically restart and this window will open this is boot menu- press enter or automatically it will choose now it will check all the dependencies-for new user the welcome and user setting screen will open- now click on the forward button, this is an important window create you username and password dont forget it just fill the details and click forward-like this, i have filled all the things and clicked on forward- and choose the time and date just click on forward.click on forward and go for the next step for now dont register this server with the red hat network for easy installation.now again click on the forward button thats it- then finish the setup and then click forward- this is the last step of the installation.enter your credentials and then password now just hit enter and see the magic-this is the homepage of the red hat linux 6 after installation. now we will see how to power it off,just click on the power off button and this screen will again comes this is how the installation is done. now we only have to login and use the rhl 6. thank you for following the installation guide of rhl6.",
    "sentences": [
      "ca  1  linux installation (red hat 6) name:- akarsh mishra reg.",
      "no:- 12528244here is the step-by-step process to install the linux operating system on the virtual machine so follow the- first we will open the vmware workstation 17 pro this is the window you will get when you open the first step, here are three options create a new virtual machine, open a virtual machine, and connect to a remote server.",
      "on the left side there is a panel which is named as library, where all the available and all created virtual machines.",
      "on the main window where the current virtual machines name and details.in the second step will click on the create a new virtual machine then this window will be opened- here we can see that there is a menu is opened where two radio buttons are available- typical (recommended) custom (advanced) so for ease we will choose the recommended settings in installation.",
      "now choose the typical options and click next button.in this window you will find-out that the installation wizard had a numerous number of options be careful here- this wizard had various options now what you have to do please be cautious about selections.first choose the installer disc image file(iso) option  and there will we select the iso files of the linux distribution.",
      "first what is iso file: it creates a complete image of an optical disc, including its file and directory structure, and is used to make digital copies for distribution or installation of software.now we will click on the browse button to select the linux distribution the current linux distributions is contained in 3 parts.",
      "this menu will be opened and then you have to select the first iso and click on open.",
      "the new installation wizard would be open and we have to select various options.here we have to select the linux distribution and version of the distribution:- check on the linux, and then go and select the version :- red hat linux and then click on next.this wizard will opened:- now give the name virtual machine name: and click next.this is how we change the name-so in this step we will decide the disk capacity here we will choose the by default 8 gb disk size.",
      "and let all other things as it is and press the next button.this wizard tells about the specifications of the virtual machine like- name, location, version, operation system, hard disk, memory, network adapter etc.",
      "so now click on the customize hardware option to change the specifications.when you click the customize hardware this menu will be opened- by the way this step can be performed after the creation of the virtual machine but if you want to do it now you can do here and that would be easy as well- here we will change the memory size according to need.and now we will increase the numbers of the processors which we going to assign the virtual machine- on the left panel you need to click on the processors.in this step we will assign the numbers of processors : 2 and numbers of cores per processor : 4 make the changes according to your hosts system specification.after this we click on done then this screen will be opened :- so we can see that the new window appears name of the virtual machine shown at the bar.",
      "in that description of the current machine is also showed up specifications of the vm.",
      "there is two options 1. power on this virtual machine 2. edit virtual machine settingwhen we click on the edit the same specification window opens here things are same to edit details.now we will click on the power on this virtual machine the left installation part would be start- then after hitting enter the visual installation interface would be open- and we will choose the skip media test by using keystroke of left key.now you will see a window where the details of red hat linux installations guide is there and two buttons with help and release notes we dont have to do anything with them so we will focus on the next button and press it.",
      "here you can see that there is two buttons next and back, we will click on the next button and go with the flow of installation.now we see there is an option to choose the language selection menu here we will choose english(english).",
      "and click on next so now we have to select the keyboard configuration i.e.",
      "the type of your keyboard-after keyboard configuration we will go for mouse configurations basically we dont have to do anything here just click on the next now just choose the type of installations, we dont change anything here continue on clicking next-so here we have to tackle with disk partitioning - dont change anything just click on the next- when we will click on the next it will show a warning that for initializing this drive we have to erase everything first-there is the automatic partitioning portions comes we dont have to change anything so just click on next- and we will see another warning - just click on yes and next-boot loader configuration- dont have to do anything here again just click on next for recommended settings- here is the network configuration part  just hit next :firewall configuration- just check all the incoming connections if you want- additional language support:- just choose eng and go ahedtime zone selection- choose asiacalcutta and hit next now set the root password and never forget that  for ex.",
      "root123here just click on the next and accept the current package list- again press next button-here the packages would be installed and here comes and important part-now you will see there is a prompt on the screen that change cdrom and insert the disc 2 to continue- now what we have to do just do what i have done- in the vmware window  removable devices  cddvd  settingsthis window will opened now click on the use iso image- and choose the 2nd file which is the 2nd iso file of the linux distribution.and click open and ok to the menu and then we have to the same- vmware window vm  removable devices  cddvd  connect and the process starts again and ask for the 3rd and last file.after few seconds there would be the same prompt window- like this for asking the last file- and we will do the same as we have done earlier -do not change any settings here just click on the next and go ahed-after moniter configuration click on next and wait for next screen- now click on next and dont change any setting of graphics because it automatically adjusted with the availabilities.now the last exit button would be appear so what you have to do just click on the exit and wait for the response- after some time, this screen will be shown-now the vm would automatically restart and this window will open this is boot menu- press enter or automatically it will choose now it will check all the dependencies-for new user the welcome and user setting screen will open- now click on the forward button, this is an important window create you username and password dont forget it just fill the details and click forward-like this, i have filled all the things and clicked on forward- and choose the time and date just click on forward.click on forward and go for the next step for now dont register this server with the red hat network for easy installation.now again click on the forward button thats it- then finish the setup and then click forward- this is the last step of the installation.enter your credentials and then password now just hit enter and see the magic-this is the homepage of the red hat linux 6 after installation.",
      "now we will see how to power it off,just click on the power off button and this screen will again comes this is how the installation is done.",
      "now we only have to login and use the rhl 6. thank you for following the installation guide of rhl6."
    ],
    "words": [
      "ca",
      "<NUM>",
      "linux",
      "installation",
      "red",
      "hat",
      "<NUM>",
      "name",
      "akarsh",
      "mishra",
      "reg",
      "<NUM>here",
      "step-by-step",
      "process",
      "install",
      "linux",
      "operating",
      "system",
      "virtual",
      "machine",
      "follow",
      "the-",
      "first",
      "open",
      "vmware",
      "workstation",
      "<NUM>",
      "pro",
      "window",
      "get",
      "open",
      "first",
      "step",
      "three",
      "option",
      "create",
      "new",
      "virtual",
      "machine",
      "open",
      "virtual",
      "machine",
      "connect",
      "remote",
      "server",
      "left",
      "side",
      "panel",
      "named",
      "library",
      "available",
      "created",
      "virtual",
      "machine",
      "main",
      "window",
      "current",
      "virtual",
      "machine",
      "name",
      "details.in",
      "second",
      "step",
      "click",
      "create",
      "new",
      "virtual",
      "machine",
      "window",
      "opened-",
      "see",
      "menu",
      "opened",
      "two",
      "radio",
      "button",
      "available-",
      "typical",
      "recommended",
      "custom",
      "advanced",
      "ease",
      "choose",
      "recommended",
      "setting",
      "installation",
      "choose",
      "typical",
      "option",
      "click",
      "next",
      "button.in",
      "window",
      "find-out",
      "installation",
      "wizard",
      "numerous",
      "number",
      "option",
      "careful",
      "here-",
      "wizard",
      "various",
      "option",
      "please",
      "cautious",
      "selections.first",
      "choose",
      "installer",
      "disc",
      "image",
      "file",
      "iso",
      "option",
      "select",
      "iso",
      "file",
      "linux",
      "distribution",
      "first",
      "iso",
      "file",
      "creates",
      "complete",
      "image",
      "optical",
      "disc",
      "including",
      "file",
      "directory",
      "structure",
      "used",
      "make",
      "digital",
      "copy",
      "distribution",
      "installation",
      "software.now",
      "click",
      "browse",
      "button",
      "select",
      "linux",
      "distribution",
      "current",
      "linux",
      "distribution",
      "contained",
      "<NUM>",
      "part",
      "menu",
      "opened",
      "select",
      "first",
      "iso",
      "click",
      "open",
      "new",
      "installation",
      "wizard",
      "would",
      "open",
      "select",
      "various",
      "options.here",
      "select",
      "linux",
      "distribution",
      "version",
      "distribution",
      "check",
      "linux",
      "go",
      "select",
      "version",
      "red",
      "hat",
      "linux",
      "click",
      "next.this",
      "wizard",
      "opened",
      "give",
      "name",
      "virtual",
      "machine",
      "name",
      "click",
      "next.this",
      "change",
      "name-so",
      "step",
      "decide",
      "disk",
      "capacity",
      "choose",
      "default",
      "<NUM>",
      "gb",
      "disk",
      "size",
      "let",
      "thing",
      "press",
      "next",
      "button.this",
      "wizard",
      "tell",
      "specification",
      "virtual",
      "machine",
      "like-",
      "name",
      "location",
      "version",
      "operation",
      "system",
      "hard",
      "disk",
      "memory",
      "network",
      "adapter",
      "etc",
      "click",
      "customize",
      "hardware",
      "option",
      "change",
      "specifications.when",
      "click",
      "customize",
      "hardware",
      "menu",
      "opened-",
      "way",
      "step",
      "performed",
      "creation",
      "virtual",
      "machine",
      "want",
      "would",
      "easy",
      "well-",
      "change",
      "memory",
      "size",
      "according",
      "need.and",
      "increase",
      "number",
      "processor",
      "going",
      "assign",
      "virtual",
      "machine-",
      "left",
      "panel",
      "need",
      "click",
      "processors.in",
      "step",
      "assign",
      "number",
      "processor",
      "<NUM>",
      "number",
      "core",
      "per",
      "processor",
      "<NUM>",
      "make",
      "change",
      "according",
      "host",
      "system",
      "specification.after",
      "click",
      "done",
      "screen",
      "opened",
      "see",
      "new",
      "window",
      "appears",
      "name",
      "virtual",
      "machine",
      "shown",
      "bar",
      "description",
      "current",
      "machine",
      "also",
      "showed",
      "specification",
      "vm",
      "two",
      "option",
      "<NUM>.",
      "power",
      "virtual",
      "machine",
      "<NUM>.",
      "edit",
      "virtual",
      "machine",
      "settingwhen",
      "click",
      "edit",
      "specification",
      "window",
      "open",
      "thing",
      "edit",
      "details.now",
      "click",
      "power",
      "virtual",
      "machine",
      "left",
      "installation",
      "part",
      "would",
      "start-",
      "hitting",
      "enter",
      "visual",
      "installation",
      "interface",
      "would",
      "open-",
      "choose",
      "skip",
      "medium",
      "test",
      "using",
      "keystroke",
      "left",
      "key.now",
      "see",
      "window",
      "detail",
      "red",
      "hat",
      "linux",
      "installation",
      "guide",
      "two",
      "button",
      "help",
      "release",
      "note",
      "dont",
      "anything",
      "focus",
      "next",
      "button",
      "press",
      "see",
      "two",
      "button",
      "next",
      "back",
      "click",
      "next",
      "button",
      "go",
      "flow",
      "installation.now",
      "see",
      "option",
      "choose",
      "language",
      "selection",
      "menu",
      "choose",
      "english",
      "english",
      "click",
      "next",
      "select",
      "keyboard",
      "configuration",
      "i.e",
      "type",
      "keyboard-after",
      "keyboard",
      "configuration",
      "go",
      "mouse",
      "configuration",
      "basically",
      "dont",
      "anything",
      "click",
      "next",
      "choose",
      "type",
      "installation",
      "dont",
      "change",
      "anything",
      "continue",
      "clicking",
      "next-so",
      "tackle",
      "disk",
      "partitioning",
      "dont",
      "change",
      "anything",
      "click",
      "next-",
      "click",
      "next",
      "show",
      "warning",
      "initializing",
      "drive",
      "erase",
      "everything",
      "first-there",
      "automatic",
      "partitioning",
      "portion",
      "come",
      "dont",
      "change",
      "anything",
      "click",
      "next-",
      "see",
      "another",
      "warning",
      "click",
      "yes",
      "next-boot",
      "loader",
      "configuration-",
      "dont",
      "anything",
      "click",
      "next",
      "recommended",
      "settings-",
      "network",
      "configuration",
      "part",
      "hit",
      "next",
      "firewall",
      "configuration-",
      "check",
      "incoming",
      "connection",
      "want-",
      "additional",
      "language",
      "support",
      "choose",
      "eng",
      "go",
      "ahedtime",
      "zone",
      "selection-",
      "choose",
      "asiacalcutta",
      "hit",
      "next",
      "set",
      "root",
      "password",
      "never",
      "forget",
      "ex",
      "root<NUM>here",
      "click",
      "next",
      "accept",
      "current",
      "package",
      "list-",
      "press",
      "next",
      "button-here",
      "package",
      "would",
      "installed",
      "come",
      "important",
      "part-now",
      "see",
      "prompt",
      "screen",
      "change",
      "cdrom",
      "insert",
      "disc",
      "<NUM>",
      "continue-",
      "done-",
      "vmware",
      "window",
      "removable",
      "device",
      "cddvd",
      "settingsthis",
      "window",
      "opened",
      "click",
      "use",
      "iso",
      "image-",
      "choose",
      "<NUM>nd",
      "file",
      "<NUM>nd",
      "iso",
      "file",
      "linux",
      "distribution.and",
      "click",
      "open",
      "ok",
      "menu",
      "same-",
      "vmware",
      "window",
      "vm",
      "removable",
      "device",
      "cddvd",
      "connect",
      "process",
      "start",
      "ask",
      "<NUM>rd",
      "last",
      "file.after",
      "second",
      "would",
      "prompt",
      "window-",
      "like",
      "asking",
      "last",
      "file-",
      "done",
      "earlier",
      "change",
      "setting",
      "click",
      "next",
      "go",
      "ahed-after",
      "moniter",
      "configuration",
      "click",
      "next",
      "wait",
      "next",
      "screen-",
      "click",
      "next",
      "dont",
      "change",
      "setting",
      "graphic",
      "automatically",
      "adjusted",
      "availabilities.now",
      "last",
      "exit",
      "button",
      "would",
      "appear",
      "click",
      "exit",
      "wait",
      "response-",
      "time",
      "screen",
      "shown-now",
      "vm",
      "would",
      "automatically",
      "restart",
      "window",
      "open",
      "boot",
      "menu-",
      "press",
      "enter",
      "automatically",
      "choose",
      "check",
      "dependencies-for",
      "new",
      "user",
      "welcome",
      "user",
      "setting",
      "screen",
      "open-",
      "click",
      "forward",
      "button",
      "important",
      "window",
      "create",
      "username",
      "password",
      "dont",
      "forget",
      "fill",
      "detail",
      "click",
      "forward-like",
      "filled",
      "thing",
      "clicked",
      "forward-",
      "choose",
      "time",
      "date",
      "click",
      "forward.click",
      "forward",
      "go",
      "next",
      "step",
      "dont",
      "register",
      "server",
      "red",
      "hat",
      "network",
      "easy",
      "installation.now",
      "click",
      "forward",
      "button",
      "thats",
      "it-",
      "finish",
      "setup",
      "click",
      "forward-",
      "last",
      "step",
      "installation.enter",
      "credential",
      "password",
      "hit",
      "enter",
      "see",
      "magic-this",
      "homepage",
      "red",
      "hat",
      "linux",
      "<NUM>",
      "installation",
      "see",
      "power",
      "click",
      "power",
      "button",
      "screen",
      "come",
      "installation",
      "done",
      "login",
      "use",
      "rhl",
      "<NUM>.",
      "thank",
      "following",
      "installation",
      "guide",
      "rhl<NUM>"
    ],
    "num_sentences": 18,
    "num_words": 682,
    "chunks": [
      {
        "sentences": [
          "ca  1  linux installation (red hat 6) name:- akarsh mishra reg.",
          "no:- 12528244here is the step-by-step process to install the linux operating system on the virtual machine so follow the- first we will open the vmware workstation 17 pro this is the window you will get when you open the first step, here are three options create a new virtual machine, open a virtual machine, and connect to a remote server.",
          "on the left side there is a panel which is named as library, where all the available and all created virtual machines."
        ],
        "words": [
          "ca",
          "1",
          "linux",
          "installation",
          "(red",
          "hat",
          "6)",
          "name:-",
          "akarsh",
          "mishra",
          "reg.",
          "no:-",
          "12528244here",
          "is",
          "the",
          "step-by-step",
          "process",
          "to",
          "install",
          "the",
          "linux",
          "operating",
          "system",
          "on",
          "the",
          "virtual",
          "machine",
          "so",
          "follow",
          "the-",
          "first",
          "we",
          "will",
          "open",
          "the",
          "vmware",
          "workstation",
          "17",
          "pro",
          "this",
          "is",
          "the",
          "window",
          "you",
          "will",
          "get",
          "when",
          "you",
          "open",
          "the",
          "first",
          "step,",
          "here",
          "are",
          "three",
          "options",
          "create",
          "a",
          "new",
          "virtual",
          "machine,",
          "open",
          "a",
          "virtual",
          "machine,",
          "and",
          "connect",
          "to",
          "a",
          "remote",
          "server.",
          "on",
          "the",
          "left",
          "side",
          "there",
          "is",
          "a",
          "panel",
          "which",
          "is",
          "named",
          "as",
          "library,",
          "where",
          "all",
          "the",
          "available",
          "and",
          "all",
          "created",
          "virtual",
          "machines."
        ],
        "chunk_id": 1,
        "entities": {},
        "summary": "ca 1 linux installation (red hat 6) name:- akarsh mishra reg. no:- 12528244hier ist der Schritt für Schritt-Prozess, um das linux-Betriebssystem auf der virtuellen Maschine zu installieren, so folgen Sie"
      },
      {
        "sentences": [
          "on the main window where the current virtual machines name and details.in the second step will click on the create a new virtual machine then this window will be opened- here we can see that there is a menu is opened where two radio buttons are available- typical (recommended) custom (advanced) so for ease we will choose the recommended settings in installation."
        ],
        "words": [
          "on",
          "the",
          "main",
          "window",
          "where",
          "the",
          "current",
          "virtual",
          "machines",
          "name",
          "and",
          "details.in",
          "the",
          "second",
          "step",
          "will",
          "click",
          "on",
          "the",
          "create",
          "a",
          "new",
          "virtual",
          "machine",
          "then",
          "this",
          "window",
          "will",
          "be",
          "opened-",
          "here",
          "we",
          "can",
          "see",
          "that",
          "there",
          "is",
          "a",
          "menu",
          "is",
          "opened",
          "where",
          "two",
          "radio",
          "buttons",
          "are",
          "available-",
          "typical",
          "(recommended)",
          "custom",
          "(advanced)",
          "so",
          "for",
          "ease",
          "we",
          "will",
          "choose",
          "the",
          "recommended",
          "settings",
          "in",
          "installation."
        ],
        "chunk_id": 2,
        "entities": {},
        "summary": "auf dem Hauptfenster, wo der aktuelle virtuelle Maschinenname und Details.in dem zweiten Schritt wird auf die Erstellen einer neuen virtuellen Maschine klicken dann wird dieses Fenster geöffnet- hier können wir sehen, dass es ein Menü ist geöffnet, wo zwei Radio-Taste sind"
      },
      {
        "sentences": [
          "now choose the typical options and click next button.in this window you will find-out that the installation wizard had a numerous number of options be careful here- this wizard had various options now what you have to do please be cautious about selections.first choose the installer disc image file(iso) option  and there will we select the iso files of the linux distribution."
        ],
        "words": [
          "now",
          "choose",
          "the",
          "typical",
          "options",
          "and",
          "click",
          "next",
          "button.in",
          "this",
          "window",
          "you",
          "will",
          "find-out",
          "that",
          "the",
          "installation",
          "wizard",
          "had",
          "a",
          "numerous",
          "number",
          "of",
          "options",
          "be",
          "careful",
          "here-",
          "this",
          "wizard",
          "had",
          "various",
          "options",
          "now",
          "what",
          "you",
          "have",
          "to",
          "do",
          "please",
          "be",
          "cautious",
          "about",
          "selections.first",
          "choose",
          "the",
          "installer",
          "disc",
          "image",
          "file(iso)",
          "option",
          "and",
          "there",
          "will",
          "we",
          "select",
          "the",
          "iso",
          "files",
          "of",
          "the",
          "linux",
          "distribution."
        ],
        "chunk_id": 3,
        "entities": {},
        "summary": "Wählen Sie nun die typischen Optionen und klicken Sie auf die nächste Schaltfläche.In diesem Fenster finden Sie heraus, dass der Installationsassistent eine Vielzahl von Optionen hatte Seien Sie vorsichtig hier- dieser Assistent hatte verschiedene Optionen jetzt was Sie tun müssen, bitte"
      },
      {
        "sentences": [
          "first what is iso file: it creates a complete image of an optical disc, including its file and directory structure, and is used to make digital copies for distribution or installation of software.now we will click on the browse button to select the linux distribution the current linux distributions is contained in 3 parts.",
          "this menu will be opened and then you have to select the first iso and click on open."
        ],
        "words": [
          "first",
          "what",
          "is",
          "iso",
          "file:",
          "it",
          "creates",
          "a",
          "complete",
          "image",
          "of",
          "an",
          "optical",
          "disc,",
          "including",
          "its",
          "file",
          "and",
          "directory",
          "structure,",
          "and",
          "is",
          "used",
          "to",
          "make",
          "digital",
          "copies",
          "for",
          "distribution",
          "or",
          "installation",
          "of",
          "software.now",
          "we",
          "will",
          "click",
          "on",
          "the",
          "browse",
          "button",
          "to",
          "select",
          "the",
          "linux",
          "distribution",
          "the",
          "current",
          "linux",
          "distributions",
          "is",
          "contained",
          "in",
          "3",
          "parts.",
          "this",
          "menu",
          "will",
          "be",
          "opened",
          "and",
          "then",
          "you",
          "have",
          "to",
          "select",
          "the",
          "first",
          "iso",
          "and",
          "click",
          "on",
          "open."
        ],
        "chunk_id": 4,
        "entities": {},
        "summary": "zuerst was ist iso-Datei: es erstellt ein komplettes Bild einer optischen Disc, einschließlich seiner Datei und Verzeichnisstruktur, und wird verwendet, um digitale Kopien für die Distribution oder Installation von Software zu machen. nun werden wir auf die Browse"
      },
      {
        "sentences": [
          "the new installation wizard would be open and we have to select various options.here we have to select the linux distribution and version of the distribution:- check on the linux, and then go and select the version :- red hat linux and then click on next.this wizard will opened:- now give the name virtual machine name: and click next.this is how we change the name-so in this step we will decide the disk capacity here we will choose the by default 8 gb disk size."
        ],
        "words": [
          "the",
          "new",
          "installation",
          "wizard",
          "would",
          "be",
          "open",
          "and",
          "we",
          "have",
          "to",
          "select",
          "various",
          "options.here",
          "we",
          "have",
          "to",
          "select",
          "the",
          "linux",
          "distribution",
          "and",
          "version",
          "of",
          "the",
          "distribution:-",
          "check",
          "on",
          "the",
          "linux,",
          "and",
          "then",
          "go",
          "and",
          "select",
          "the",
          "version",
          ":-",
          "red",
          "hat",
          "linux",
          "and",
          "then",
          "click",
          "on",
          "next.this",
          "wizard",
          "will",
          "opened:-",
          "now",
          "give",
          "the",
          "name",
          "virtual",
          "machine",
          "name:",
          "and",
          "click",
          "next.this",
          "is",
          "how",
          "we",
          "change",
          "the",
          "name-so",
          "in",
          "this",
          "step",
          "we",
          "will",
          "decide",
          "the",
          "disk",
          "capacity",
          "here",
          "we",
          "will",
          "choose",
          "the",
          "by",
          "default",
          "8",
          "gb",
          "disk",
          "size."
        ],
        "chunk_id": 5,
        "entities": {},
        "summary": "新しいインストールウィザードが開いて、私たちは様々なオプションを選択する必要があります。 ここでは、Linuxの配布と配布のバージョンを選択する必要があります:- Linuxをチェックし、その後、バージョンを選択します :- red hat linux そして、次のをクリックします。 このウィザードが開"
      },
      {
        "sentences": [
          "and let all other things as it is and press the next button.this wizard tells about the specifications of the virtual machine like- name, location, version, operation system, hard disk, memory, network adapter etc."
        ],
        "words": [
          "and",
          "let",
          "all",
          "other",
          "things",
          "as",
          "it",
          "is",
          "and",
          "press",
          "the",
          "next",
          "button.this",
          "wizard",
          "tells",
          "about",
          "the",
          "specifications",
          "of",
          "the",
          "virtual",
          "machine",
          "like-",
          "name,",
          "location,",
          "version,",
          "operation",
          "system,",
          "hard",
          "disk,",
          "memory,",
          "network",
          "adapter",
          "etc."
        ],
        "chunk_id": 6,
        "entities": {},
        "summary": "und lassen Sie alle anderen Dinge wie es ist und drücken Sie die nächste Taste.Dieser Assistent erzählt über die Spezifikationen der virtuelle"
      },
      {
        "sentences": [
          "so now click on the customize hardware option to change the specifications.when you click the customize hardware this menu will be opened- by the way this step can be performed after the creation of the virtual machine but if you want to do it now you can do here and that would be easy as well- here we will change the memory size according to need.and now we will increase the numbers of the processors which we going to assign the virtual machine- on the left panel you need to click on the processors.in this step we will assign the numbers of processors : 2 and numbers of cores per processor : 4 make the changes according to your hosts system specification.after this we click on done then this screen will be opened :- so we can see that the new window appears name of the virtual machine shown at the bar."
        ],
        "words": [
          "so",
          "now",
          "click",
          "on",
          "the",
          "customize",
          "hardware",
          "option",
          "to",
          "change",
          "the",
          "specifications.when",
          "you",
          "click",
          "the",
          "customize",
          "hardware",
          "this",
          "menu",
          "will",
          "be",
          "opened-",
          "by",
          "the",
          "way",
          "this",
          "step",
          "can",
          "be",
          "performed",
          "after",
          "the",
          "creation",
          "of",
          "the",
          "virtual",
          "machine",
          "but",
          "if",
          "you",
          "want",
          "to",
          "do",
          "it",
          "now",
          "you",
          "can",
          "do",
          "here",
          "and",
          "that",
          "would",
          "be",
          "easy",
          "as",
          "well-",
          "here",
          "we",
          "will",
          "change",
          "the",
          "memory",
          "size",
          "according",
          "to",
          "need.and",
          "now",
          "we",
          "will",
          "increase",
          "the",
          "numbers",
          "of",
          "the",
          "processors",
          "which",
          "we",
          "going",
          "to",
          "assign",
          "the",
          "virtual",
          "machine-",
          "on",
          "the",
          "left",
          "panel",
          "you",
          "need",
          "to",
          "click",
          "on",
          "the",
          "processors.in",
          "this",
          "step",
          "we",
          "will",
          "assign",
          "the",
          "numbers",
          "of",
          "processors",
          ":",
          "2",
          "and",
          "numbers",
          "of",
          "cores",
          "per",
          "processor",
          ":",
          "4",
          "make",
          "the",
          "changes",
          "according",
          "to",
          "your",
          "hosts",
          "system",
          "specification.after",
          "this",
          "we",
          "click",
          "on",
          "done",
          "then",
          "this",
          "screen",
          "will",
          "be",
          "opened",
          ":-",
          "so",
          "we",
          "can",
          "see",
          "that",
          "the",
          "new",
          "window",
          "appears",
          "name",
          "of",
          "the",
          "virtual",
          "machine",
          "shown",
          "at",
          "the",
          "bar."
        ],
        "chunk_id": 7,
        "entities": {},
        "summary": "だから、今、仕様を変更するためのカスタマイズハードウェアオプションをクリックします。 カスタマイズハードウェアをクリックすると、このメニューが開きます。 この手順は、仮想マシンの作成後に実行できますが、あなたが今それをしたい場合は、ここで"
      },
      {
        "sentences": [
          "in that description of the current machine is also showed up specifications of the vm."
        ],
        "words": [
          "in",
          "that",
          "description",
          "of",
          "the",
          "current",
          "machine",
          "is",
          "also",
          "showed",
          "up",
          "specifications",
          "of",
          "the",
          "vm."
        ],
        "chunk_id": 8,
        "entities": {},
        "summary": "in that description of the current machine is also showed up specifications of the vm."
      },
      {
        "sentences": [
          "there is two options 1. power on this virtual machine 2. edit virtual machine settingwhen we click on the edit the same specification window opens here things are same to edit details.now we will click on the power on this virtual machine the left installation part would be start- then after hitting enter the visual installation interface would be open- and we will choose the skip media test by using keystroke of left key.now you will see a window where the details of red hat linux installations guide is there and two buttons with help and release notes we dont have to do anything with them so we will focus on the next button and press it."
        ],
        "words": [
          "there",
          "is",
          "two",
          "options",
          "1.",
          "power",
          "on",
          "this",
          "virtual",
          "machine",
          "2.",
          "edit",
          "virtual",
          "machine",
          "settingwhen",
          "we",
          "click",
          "on",
          "the",
          "edit",
          "the",
          "same",
          "specification",
          "window",
          "opens",
          "here",
          "things",
          "are",
          "same",
          "to",
          "edit",
          "details.now",
          "we",
          "will",
          "click",
          "on",
          "the",
          "power",
          "on",
          "this",
          "virtual",
          "machine",
          "the",
          "left",
          "installation",
          "part",
          "would",
          "be",
          "start-",
          "then",
          "after",
          "hitting",
          "enter",
          "the",
          "visual",
          "installation",
          "interface",
          "would",
          "be",
          "open-",
          "and",
          "we",
          "will",
          "choose",
          "the",
          "skip",
          "media",
          "test",
          "by",
          "using",
          "keystroke",
          "of",
          "left",
          "key.now",
          "you",
          "will",
          "see",
          "a",
          "window",
          "where",
          "the",
          "details",
          "of",
          "red",
          "hat",
          "linux",
          "installations",
          "guide",
          "is",
          "there",
          "and",
          "two",
          "buttons",
          "with",
          "help",
          "and",
          "release",
          "notes",
          "we",
          "dont",
          "have",
          "to",
          "do",
          "anything",
          "with",
          "them",
          "so",
          "we",
          "will",
          "focus",
          "on",
          "the",
          "next",
          "button",
          "and",
          "press",
          "it."
        ],
        "chunk_id": 9,
        "entities": {},
        "summary": "2つのオプションがあります 1. この仮想マシンの電源 2. 仮想マシンの設定を編集する我々が同じ仕様のウィンドウを編集をクリックすると、ここでの詳細を編集するために同じことが開きます。 今我々はこの仮想マシンの"
      },
      {
        "sentences": [
          "here you can see that there is two buttons next and back, we will click on the next button and go with the flow of installation.now we see there is an option to choose the language selection menu here we will choose english(english).",
          "and click on next so now we have to select the keyboard configuration i.e."
        ],
        "words": [
          "here",
          "you",
          "can",
          "see",
          "that",
          "there",
          "is",
          "two",
          "buttons",
          "next",
          "and",
          "back,",
          "we",
          "will",
          "click",
          "on",
          "the",
          "next",
          "button",
          "and",
          "go",
          "with",
          "the",
          "flow",
          "of",
          "installation.now",
          "we",
          "see",
          "there",
          "is",
          "an",
          "option",
          "to",
          "choose",
          "the",
          "language",
          "selection",
          "menu",
          "here",
          "we",
          "will",
          "choose",
          "english(english).",
          "and",
          "click",
          "on",
          "next",
          "so",
          "now",
          "we",
          "have",
          "to",
          "select",
          "the",
          "keyboard",
          "configuration",
          "i.e."
        ],
        "chunk_id": 10,
        "entities": {},
        "summary": "hier können Sie sehen, dass es zwei Schaltflächen neben und zurück, wir werden auf die nächste Schaltfläche klicken und gehen mit dem Fluss der Installation. nun sehen wir, dass es eine Option ist, um die Sprache Auswahl Menü hier wählen wir"
      },
      {
        "sentences": [
          "the type of your keyboard-after keyboard configuration we will go for mouse configurations basically we dont have to do anything here just click on the next now just choose the type of installations, we dont change anything here continue on clicking next-so here we have to tackle with disk partitioning - dont change anything just click on the next- when we will click on the next it will show a warning that for initializing this drive we have to erase everything first-there is the automatic partitioning portions comes we dont have to change anything so just click on next- and we will see another warning - just click on yes and next-boot loader configuration- dont have to do anything here again just click on next for recommended settings- here is the network configuration part  just hit next :firewall configuration- just check all the incoming connections if you want- additional language support:- just choose eng and go ahedtime zone selection- choose asiacalcutta and hit next now set the root password and never forget that  for ex."
        ],
        "words": [
          "the",
          "type",
          "of",
          "your",
          "keyboard-after",
          "keyboard",
          "configuration",
          "we",
          "will",
          "go",
          "for",
          "mouse",
          "configurations",
          "basically",
          "we",
          "dont",
          "have",
          "to",
          "do",
          "anything",
          "here",
          "just",
          "click",
          "on",
          "the",
          "next",
          "now",
          "just",
          "choose",
          "the",
          "type",
          "of",
          "installations,",
          "we",
          "dont",
          "change",
          "anything",
          "here",
          "continue",
          "on",
          "clicking",
          "next-so",
          "here",
          "we",
          "have",
          "to",
          "tackle",
          "with",
          "disk",
          "partitioning",
          "-",
          "dont",
          "change",
          "anything",
          "just",
          "click",
          "on",
          "the",
          "next-",
          "when",
          "we",
          "will",
          "click",
          "on",
          "the",
          "next",
          "it",
          "will",
          "show",
          "a",
          "warning",
          "that",
          "for",
          "initializing",
          "this",
          "drive",
          "we",
          "have",
          "to",
          "erase",
          "everything",
          "first-there",
          "is",
          "the",
          "automatic",
          "partitioning",
          "portions",
          "comes",
          "we",
          "dont",
          "have",
          "to",
          "change",
          "anything",
          "so",
          "just",
          "click",
          "on",
          "next-",
          "and",
          "we",
          "will",
          "see",
          "another",
          "warning",
          "-",
          "just",
          "click",
          "on",
          "yes",
          "and",
          "next-boot",
          "loader",
          "configuration-",
          "dont",
          "have",
          "to",
          "do",
          "anything",
          "here",
          "again",
          "just",
          "click",
          "on",
          "next",
          "for",
          "recommended",
          "settings-",
          "here",
          "is",
          "the",
          "network",
          "configuration",
          "part",
          "just",
          "hit",
          "next",
          ":firewall",
          "configuration-",
          "just",
          "check",
          "all",
          "the",
          "incoming",
          "connections",
          "if",
          "you",
          "want-",
          "additional",
          "language",
          "support:-",
          "just",
          "choose",
          "eng",
          "and",
          "go",
          "ahedtime",
          "zone",
          "selection-",
          "choose",
          "asiacalcutta",
          "and",
          "hit",
          "next",
          "now",
          "set",
          "the",
          "root",
          "password",
          "and",
          "never",
          "forget",
          "that",
          "for",
          "ex."
        ],
        "chunk_id": 11,
        "entities": {},
        "summary": "le type de votre clavier-après la configuration du clavier nous allons aller pour les configurations de la souris en principe nous n'avons pas à faire quoi ici juste cliquer sur le suivant maintenant simplement choisir le type d'installations, nous n'avons pas à"
      },
      {
        "sentences": [
          "root123here just click on the next and accept the current package list- again press next button-here the packages would be installed and here comes and important part-now you will see there is a prompt on the screen that change cdrom and insert the disc 2 to continue- now what we have to do just do what i have done- in the vmware window  removable devices  cddvd  settingsthis window will opened now click on the use iso image- and choose the 2nd file which is the 2nd iso file of the linux distribution.and click open and ok to the menu and then we have to the same- vmware window vm  removable devices  cddvd  connect and the process starts again and ask for the 3rd and last file.after few seconds there would be the same prompt window- like this for asking the last file- and we will do the same as we have done earlier -do not change any settings here just click on the next and go ahed-after moniter configuration click on next and wait for next screen- now click on next and dont change any setting of graphics because it automatically adjusted with the availabilities.now the last exit button would be appear so what you have to do just click on the exit and wait for the response- after some time, this screen will be shown-now the vm would automatically restart and this window will open this is boot menu- press enter or automatically it will choose now it will check all the dependencies-for new user the welcome and user setting screen will open- now click on the forward button, this is an important window create you username and password dont forget it just fill the details and click forward-like this, i have filled all the things and clicked on forward- and choose the time and date just click on forward.click on forward and go for the next step for now dont register this server with the red hat network for easy installation.now again click on the forward button thats it- then finish the setup and then click forward- this is the last step of the installation.enter your credentials and then password now just hit enter and see the magic-this is the homepage of the red hat linux 6 after installation."
        ],
        "words": [
          "root123here",
          "just",
          "click",
          "on",
          "the",
          "next",
          "and",
          "accept",
          "the",
          "current",
          "package",
          "list-",
          "again",
          "press",
          "next",
          "button-here",
          "the",
          "packages",
          "would",
          "be",
          "installed",
          "and",
          "here",
          "comes",
          "and",
          "important",
          "part-now",
          "you",
          "will",
          "see",
          "there",
          "is",
          "a",
          "prompt",
          "on",
          "the",
          "screen",
          "that",
          "change",
          "cdrom",
          "and",
          "insert",
          "the",
          "disc",
          "2",
          "to",
          "continue-",
          "now",
          "what",
          "we",
          "have",
          "to",
          "do",
          "just",
          "do",
          "what",
          "i",
          "have",
          "done-",
          "in",
          "the",
          "vmware",
          "window",
          "removable",
          "devices",
          "cddvd",
          "settingsthis",
          "window",
          "will",
          "opened",
          "now",
          "click",
          "on",
          "the",
          "use",
          "iso",
          "image-",
          "and",
          "choose",
          "the",
          "2nd",
          "file",
          "which",
          "is",
          "the",
          "2nd",
          "iso",
          "file",
          "of",
          "the",
          "linux",
          "distribution.and",
          "click",
          "open",
          "and",
          "ok",
          "to",
          "the",
          "menu",
          "and",
          "then",
          "we",
          "have",
          "to",
          "the",
          "same-",
          "vmware",
          "window",
          "vm",
          "removable",
          "devices",
          "cddvd",
          "connect",
          "and",
          "the",
          "process",
          "starts",
          "again",
          "and",
          "ask",
          "for",
          "the",
          "3rd",
          "and",
          "last",
          "file.after",
          "few",
          "seconds",
          "there",
          "would",
          "be",
          "the",
          "same",
          "prompt",
          "window-",
          "like",
          "this",
          "for",
          "asking",
          "the",
          "last",
          "file-",
          "and",
          "we",
          "will",
          "do",
          "the",
          "same",
          "as",
          "we",
          "have",
          "done",
          "earlier",
          "-do",
          "not",
          "change",
          "any",
          "settings",
          "here",
          "just",
          "click",
          "on",
          "the",
          "next",
          "and",
          "go",
          "ahed-after",
          "moniter",
          "configuration",
          "click",
          "on",
          "next",
          "and",
          "wait",
          "for",
          "next",
          "screen-",
          "now",
          "click",
          "on",
          "next",
          "and",
          "dont",
          "change",
          "any",
          "setting",
          "of",
          "graphics",
          "because",
          "it",
          "automatically",
          "adjusted",
          "with",
          "the",
          "availabilities.now",
          "the",
          "last",
          "exit",
          "button",
          "would",
          "be",
          "appear",
          "so",
          "what",
          "you",
          "have",
          "to",
          "do",
          "just",
          "click",
          "on",
          "the",
          "exit",
          "and",
          "wait",
          "for",
          "the",
          "response-",
          "after",
          "some",
          "time,",
          "this",
          "screen",
          "will",
          "be",
          "shown-now",
          "the",
          "vm",
          "would",
          "automatically",
          "restart",
          "and",
          "this",
          "window",
          "will",
          "open",
          "this",
          "is",
          "boot",
          "menu-",
          "press",
          "enter",
          "or",
          "automatically",
          "it",
          "will",
          "choose",
          "now",
          "it",
          "will",
          "check",
          "all",
          "the",
          "dependencies-for",
          "new",
          "user",
          "the",
          "welcome",
          "and",
          "user",
          "setting",
          "screen",
          "will",
          "open-",
          "now",
          "click",
          "on",
          "the",
          "forward",
          "button,",
          "this",
          "is",
          "an",
          "important",
          "window",
          "create",
          "you",
          "username",
          "and",
          "password",
          "dont",
          "forget",
          "it",
          "just",
          "fill",
          "the",
          "details",
          "and",
          "click",
          "forward-like",
          "this,",
          "i",
          "have",
          "filled",
          "all",
          "the",
          "things",
          "and",
          "clicked",
          "on",
          "forward-",
          "and",
          "choose",
          "the",
          "time",
          "and",
          "date",
          "just",
          "click",
          "on",
          "forward.click",
          "on",
          "forward",
          "and",
          "go",
          "for",
          "the",
          "next",
          "step",
          "for",
          "now",
          "dont",
          "register",
          "this",
          "server",
          "with",
          "the",
          "red",
          "hat",
          "network",
          "for",
          "easy",
          "installation.now",
          "again",
          "click",
          "on",
          "the",
          "forward",
          "button",
          "thats",
          "it-",
          "then",
          "finish",
          "the",
          "setup",
          "and",
          "then",
          "click",
          "forward-",
          "this",
          "is",
          "the",
          "last",
          "step",
          "of",
          "the",
          "installation.enter",
          "your",
          "credentials",
          "and",
          "then",
          "password",
          "now",
          "just",
          "hit",
          "enter",
          "and",
          "see",
          "the",
          "magic-this",
          "is",
          "the",
          "homepage",
          "of",
          "the",
          "red",
          "hat",
          "linux",
          "6",
          "after",
          "installation."
        ],
        "chunk_id": 12,
        "entities": {},
        "summary": "root123here just click on the next and accept the current package list- again press next button-here the packages would be installed and here comes and important part-now you will see there is a prompt on the screen that change cdrom and insert the disc 2 to continue"
      },
      {
        "sentences": [
          "now we will see how to power it off,just click on the power off button and this screen will again comes this is how the installation is done.",
          "now we only have to login and use the rhl 6. thank you for following the installation guide of rhl6."
        ],
        "words": [
          "now",
          "we",
          "will",
          "see",
          "how",
          "to",
          "power",
          "it",
          "off,just",
          "click",
          "on",
          "the",
          "power",
          "off",
          "button",
          "and",
          "this",
          "screen",
          "will",
          "again",
          "comes",
          "this",
          "is",
          "how",
          "the",
          "installation",
          "is",
          "done.",
          "now",
          "we",
          "only",
          "have",
          "to",
          "login",
          "and",
          "use",
          "the",
          "rhl",
          "6.",
          "thank",
          "you",
          "for",
          "following",
          "the",
          "installation",
          "guide",
          "of",
          "rhl6."
        ],
        "chunk_id": 13,
        "entities": {},
        "summary": "اوس موږ به وګورو چې څنګه دا د بریښنا بند کړئ، یوازې د بریښنا بند تڼۍ باندې کلیک وکړئ او دا سکرین به بیا بیا راشي دا دا ده چې څنګه نصب ترسره کیږي"
      }
    ],
    "doc_summary": "ca  1  linux installation (red hat 6) name:- akarsh mishra reg",
    "entities": {}
  },
  {
    "doc_id": "Annexure-I.pdf",
    "raw_text": "Annexure-I\nTeam : Code Terrors\nName Gender Email id Mobile no. Stream Acade\n(M/F) mic\nYear\nTeam Leader Himanshu M himanshusaxena71333@ 9815759234 BCA III\nSaxena gmail.com YEAR\nTeam Bheeshan M bhishansharma3354@gm 9872095303 B.SC IT III\nMember Sharma ail.com YEAR\nTeam Himanshu M himanshujha202005@gm 9877698593 BCA III\nMember Jha ail.com YEAR\nTeam Shanvi F 0805shanvi@gmail.com 9064861954 BCA III\nMember YEAR\nTeam Shwe Win M nickytwist70@gmail.com 6280741995 B.SC IT III\nMember Aung YEAR\nTeam Akarsh M akarshmi.am@gmail.com 8005006549 MCA I\nMember Mishra YEAR\nPSID: 25080\nProblem Statement: Document Overload at Kochi Metro Rail Limited (KMRL)-An\nautomated solution.\nProposed Solution:\nAll documents that enter our ecosystem will originate at the Unified Upload Hub,\nwhich integrates all sources like WhatsApp, Email, Maximo, SharePoint, and direct\nuploads. The files are instead not stored immediately, but placed on a temporary\nin-memory representation of the files in the form of JSON, which can be speedily\nprocessed.\nA five-stage AI pipeline is then used to pass the information. First, Optical\nCharacter Recognition breaks the visual shell of the document setting text free. It\nis polished through the use of Natural Language Processing systems, whichstandardize, normalize and clean it. Semantically intelligent chunking of refined\ncontent into semantically preserving chunks is made. Entities, summaries, and\ntacit departmental jargon are detected by transformer models fed on these\nfragments. The pipeline finishes off with the FAISS based embedding indexing, and\nPostgreSQL as a structure repository.\nIntelligence goes past storage. A hash-based caching layer will provide faster\nretrieval, whereas a priority classification algorithm will bring out priority\ndirectives, which will subsequently result in immediate notifications to\nstakeholders.\nIt has a ReactJS front end that is bilingual (English/Malayalam) and has fluid search\nand secure role-based dashboards. Full traceability is ensured by the use of audit\nlogging.\nWhat arises herewith of such an architecture is not some document management\nsystem, but a smart engine of directives, which transforms fragmented,\nmultilingual streams of data into prioritized, searchable, and actionable\nknowledge. It makes sure that the appropriate instruction, translated and\ncategorized, goes to the appropriate individual at the very time that it counts the\nmost.\nFlow Chart/Block Diagram/3D Diagram of the Solution:Figure 1. Sequence diagram of whole projectFigure 2. Node to node backend infrastructure",
    "file_type": "pdf",
    "length": 367,
    "cleaned_text": "annexure-i team : code terrors name gender email id mobile no. stream acade (mf) mic year team leader himanshu m himanshusaxena71333 9815759234 bca iii saxena gmail.com year team bheeshan m bhishansharma3354gm 9872095303 b.sc it iii member sharma ail.com year team himanshu m himanshujha202005gm 9877698593 bca iii member jha ail.com year team shanvi f 0805shanvigmail.com 9064861954 bca iii member year team shwe win m nickytwist70gmail.com 6280741995 b.sc it iii member aung year team akarsh m akarshmi.amgmail.com 8005006549 mca i member mishra year psid: 25080 problem statement: document overload at kochi metro rail limited (kmrl)-an automated solution. proposed solution: all documents that enter our ecosystem will originate at the unified upload hub, which integrates all sources like whatsapp, email, maximo, sharepoint, and direct uploads. the files are instead not stored immediately, but placed on a temporary in-memory representation of the files in the form of json, which can be speedily processed. a five-stage ai pipeline is then used to pass the information. first, optical character recognition breaks the visual shell of the document setting text free. it is polished through the use of natural language processing systems, whichstandardize, normalize and clean it. semantically intelligent chunking of refined content into semantically preserving chunks is made. entities, summaries, and tacit departmental jargon are detected by transformer models fed on these fragments. the pipeline finishes off with the faiss based embedding indexing, and postgresql as a structure repository. intelligence goes past storage. a hash-based caching layer will provide faster retrieval, whereas a priority classification algorithm will bring out priority directives, which will subsequently result in immediate notifications to stakeholders. it has a reactjs front end that is bilingual (englishmalayalam) and has fluid search and secure role-based dashboards. full traceability is ensured by the use of audit logging. what arises herewith of such an architecture is not some document management system, but a smart engine of directives, which transforms fragmented, multilingual streams of data into prioritized, searchable, and actionable knowledge. it makes sure that the appropriate instruction, translated and categorized, goes to the appropriate individual at the very time that it counts the most. flow chartblock diagram3d diagram of the solution:figure 1. sequence diagram of whole projectfigure 2. node to node backend infrastructure",
    "sentences": [
      "annexure-i team : code terrors name gender email id mobile no.",
      "stream acade (mf) mic year team leader himanshu m himanshusaxena71333 9815759234 bca iii saxena gmail.com year team bheeshan m bhishansharma3354gm 9872095303 b.sc it iii member sharma ail.com year team himanshu m himanshujha202005gm 9877698593 bca iii member jha ail.com year team shanvi f 0805shanvigmail.com 9064861954 bca iii member year team shwe win m nickytwist70gmail.com 6280741995 b.sc it iii member aung year team akarsh m akarshmi.amgmail.com 8005006549 mca i member mishra year psid: 25080 problem statement: document overload at kochi metro rail limited (kmrl)-an automated solution.",
      "proposed solution: all documents that enter our ecosystem will originate at the unified upload hub, which integrates all sources like whatsapp, email, maximo, sharepoint, and direct uploads.",
      "the files are instead not stored immediately, but placed on a temporary in-memory representation of the files in the form of json, which can be speedily processed.",
      "a five-stage ai pipeline is then used to pass the information.",
      "first, optical character recognition breaks the visual shell of the document setting text free.",
      "it is polished through the use of natural language processing systems, whichstandardize, normalize and clean it.",
      "semantically intelligent chunking of refined content into semantically preserving chunks is made.",
      "entities, summaries, and tacit departmental jargon are detected by transformer models fed on these fragments.",
      "the pipeline finishes off with the faiss based embedding indexing, and postgresql as a structure repository.",
      "intelligence goes past storage.",
      "a hash-based caching layer will provide faster retrieval, whereas a priority classification algorithm will bring out priority directives, which will subsequently result in immediate notifications to stakeholders.",
      "it has a reactjs front end that is bilingual (englishmalayalam) and has fluid search and secure role-based dashboards.",
      "full traceability is ensured by the use of audit logging.",
      "what arises herewith of such an architecture is not some document management system, but a smart engine of directives, which transforms fragmented, multilingual streams of data into prioritized, searchable, and actionable knowledge.",
      "it makes sure that the appropriate instruction, translated and categorized, goes to the appropriate individual at the very time that it counts the most.",
      "flow chartblock diagram3d diagram of the solution:figure 1. sequence diagram of whole projectfigure 2. node to node backend infrastructure"
    ],
    "words": [
      "annexure-i",
      "team",
      "code",
      "terror",
      "name",
      "gender",
      "email",
      "id",
      "mobile",
      "stream",
      "acade",
      "mf",
      "mic",
      "year",
      "team",
      "leader",
      "himanshu",
      "himanshusaxena<NUM>",
      "<NUM>",
      "bca",
      "iii",
      "saxena",
      "gmail.com",
      "year",
      "team",
      "bheeshan",
      "bhishansharma<NUM>gm",
      "<NUM>",
      "b.sc",
      "iii",
      "member",
      "sharma",
      "ail.com",
      "year",
      "team",
      "himanshu",
      "himanshujha<NUM>gm",
      "<NUM>",
      "bca",
      "iii",
      "member",
      "jha",
      "ail.com",
      "year",
      "team",
      "shanvi",
      "f",
      "<NUM>shanvigmail.com",
      "<NUM>",
      "bca",
      "iii",
      "member",
      "year",
      "team",
      "shwe",
      "win",
      "nickytwist<NUM>gmail.com",
      "<NUM>",
      "b.sc",
      "iii",
      "member",
      "aung",
      "year",
      "team",
      "akarsh",
      "akarshmi.amgmail.com",
      "<NUM>",
      "mca",
      "member",
      "mishra",
      "year",
      "psid",
      "<NUM>",
      "problem",
      "statement",
      "document",
      "overload",
      "kochi",
      "metro",
      "rail",
      "limited",
      "kmrl",
      "automated",
      "solution",
      "proposed",
      "solution",
      "document",
      "enter",
      "ecosystem",
      "originate",
      "unified",
      "upload",
      "hub",
      "integrates",
      "source",
      "like",
      "whatsapp",
      "email",
      "maximo",
      "sharepoint",
      "direct",
      "uploads",
      "file",
      "instead",
      "stored",
      "immediately",
      "placed",
      "temporary",
      "in-memory",
      "representation",
      "file",
      "form",
      "json",
      "speedily",
      "processed",
      "five-stage",
      "ai",
      "pipeline",
      "used",
      "pas",
      "information",
      "first",
      "optical",
      "character",
      "recognition",
      "break",
      "visual",
      "shell",
      "document",
      "setting",
      "text",
      "free",
      "polished",
      "use",
      "natural",
      "language",
      "processing",
      "system",
      "whichstandardize",
      "normalize",
      "clean",
      "semantically",
      "intelligent",
      "chunking",
      "refined",
      "content",
      "semantically",
      "preserving",
      "chunk",
      "made",
      "entity",
      "summary",
      "tacit",
      "departmental",
      "jargon",
      "detected",
      "transformer",
      "model",
      "fed",
      "fragment",
      "pipeline",
      "finish",
      "faiss",
      "based",
      "embedding",
      "indexing",
      "postgresql",
      "structure",
      "repository",
      "intelligence",
      "go",
      "past",
      "storage",
      "hash-based",
      "caching",
      "layer",
      "provide",
      "faster",
      "retrieval",
      "whereas",
      "priority",
      "classification",
      "algorithm",
      "bring",
      "priority",
      "directive",
      "subsequently",
      "result",
      "immediate",
      "notification",
      "stakeholder",
      "reactjs",
      "front",
      "end",
      "bilingual",
      "englishmalayalam",
      "fluid",
      "search",
      "secure",
      "role-based",
      "dashboard",
      "full",
      "traceability",
      "ensured",
      "use",
      "audit",
      "logging",
      "arises",
      "herewith",
      "architecture",
      "document",
      "management",
      "system",
      "smart",
      "engine",
      "directive",
      "transforms",
      "fragmented",
      "multilingual",
      "stream",
      "data",
      "prioritized",
      "searchable",
      "actionable",
      "knowledge",
      "make",
      "sure",
      "appropriate",
      "instruction",
      "translated",
      "categorized",
      "go",
      "appropriate",
      "individual",
      "time",
      "count",
      "flow",
      "chartblock",
      "diagram<NUM>d",
      "diagram",
      "solution",
      "figure",
      "<NUM>.",
      "sequence",
      "diagram",
      "whole",
      "projectfigure",
      "<NUM>.",
      "node",
      "node",
      "backend",
      "infrastructure"
    ],
    "num_sentences": 17,
    "num_words": 252,
    "chunks": [
      {
        "sentences": [
          "annexure-i team : code terrors name gender email id mobile no.",
          "stream acade (mf) mic year team leader himanshu m himanshusaxena71333 9815759234 bca iii saxena gmail.com year team bheeshan m bhishansharma3354gm 9872095303 b.sc it iii member sharma ail.com year team himanshu m himanshujha202005gm 9877698593 bca iii member jha ail.com year team shanvi f 0805shanvigmail.com 9064861954 bca iii member year team shwe win m nickytwist70gmail.com 6280741995 b.sc it iii member aung year team akarsh m akarshmi.amgmail.com 8005006549 mca i member mishra year psid: 25080 problem statement: document overload at kochi metro rail limited (kmrl)-an automated solution."
        ],
        "words": [
          "annexure-i",
          "team",
          ":",
          "code",
          "terrors",
          "name",
          "gender",
          "email",
          "id",
          "mobile",
          "no.",
          "stream",
          "acade",
          "(mf)",
          "mic",
          "year",
          "team",
          "leader",
          "himanshu",
          "m",
          "himanshusaxena71333",
          "9815759234",
          "bca",
          "iii",
          "saxena",
          "gmail.com",
          "year",
          "team",
          "bheeshan",
          "m",
          "bhishansharma3354gm",
          "9872095303",
          "b.sc",
          "it",
          "iii",
          "member",
          "sharma",
          "ail.com",
          "year",
          "team",
          "himanshu",
          "m",
          "himanshujha202005gm",
          "9877698593",
          "bca",
          "iii",
          "member",
          "jha",
          "ail.com",
          "year",
          "team",
          "shanvi",
          "f",
          "0805shanvigmail.com",
          "9064861954",
          "bca",
          "iii",
          "member",
          "year",
          "team",
          "shwe",
          "win",
          "m",
          "nickytwist70gmail.com",
          "6280741995",
          "b.sc",
          "it",
          "iii",
          "member",
          "aung",
          "year",
          "team",
          "akarsh",
          "m",
          "akarshmi.amgmail.com",
          "8005006549",
          "mca",
          "i",
          "member",
          "mishra",
          "year",
          "psid:",
          "25080",
          "problem",
          "statement:",
          "document",
          "overload",
          "at",
          "kochi",
          "metro",
          "rail",
          "limited",
          "(kmrl)-an",
          "automated",
          "solution."
        ],
        "chunk_id": 1,
        "entities": {},
        "summary": "annexure-i team : code terrors nom sexe courriel id mobile no. stream acade (mf) mic an team leader himanshu m himanshusaxena71333 9815759234 bca iii saxena gmail.com an team bhe"
      },
      {
        "sentences": [
          "proposed solution: all documents that enter our ecosystem will originate at the unified upload hub, which integrates all sources like whatsapp, email, maximo, sharepoint, and direct uploads.",
          "the files are instead not stored immediately, but placed on a temporary in-memory representation of the files in the form of json, which can be speedily processed.",
          "a five-stage ai pipeline is then used to pass the information.",
          "first, optical character recognition breaks the visual shell of the document setting text free.",
          "it is polished through the use of natural language processing systems, whichstandardize, normalize and clean it."
        ],
        "words": [
          "proposed",
          "solution:",
          "all",
          "documents",
          "that",
          "enter",
          "our",
          "ecosystem",
          "will",
          "originate",
          "at",
          "the",
          "unified",
          "upload",
          "hub,",
          "which",
          "integrates",
          "all",
          "sources",
          "like",
          "whatsapp,",
          "email,",
          "maximo,",
          "sharepoint,",
          "and",
          "direct",
          "uploads.",
          "the",
          "files",
          "are",
          "instead",
          "not",
          "stored",
          "immediately,",
          "but",
          "placed",
          "on",
          "a",
          "temporary",
          "in-memory",
          "representation",
          "of",
          "the",
          "files",
          "in",
          "the",
          "form",
          "of",
          "json,",
          "which",
          "can",
          "be",
          "speedily",
          "processed.",
          "a",
          "five-stage",
          "ai",
          "pipeline",
          "is",
          "then",
          "used",
          "to",
          "pass",
          "the",
          "information.",
          "first,",
          "optical",
          "character",
          "recognition",
          "breaks",
          "the",
          "visual",
          "shell",
          "of",
          "the",
          "document",
          "setting",
          "text",
          "free.",
          "it",
          "is",
          "polished",
          "through",
          "the",
          "use",
          "of",
          "natural",
          "language",
          "processing",
          "systems,",
          "whichstandardize,",
          "normalize",
          "and",
          "clean",
          "it."
        ],
        "chunk_id": 2,
        "entities": {},
        "summary": "وړاندیز شوی حل: ټول اسناد چې زموږ د اکوسیستم ته ننوځي به د یوځای شوي اپلوډ مرکز کې رامینځته شي، کوم چې د WhatsApp، بریښنالیک، ماماټو، شریک ټکی، او مستقیم اپلوډونو په"
      },
      {
        "sentences": [
          "semantically intelligent chunking of refined content into semantically preserving chunks is made.",
          "entities, summaries, and tacit departmental jargon are detected by transformer models fed on these fragments.",
          "the pipeline finishes off with the faiss based embedding indexing, and postgresql as a structure repository.",
          "intelligence goes past storage.",
          "a hash-based caching layer will provide faster retrieval, whereas a priority classification algorithm will bring out priority directives, which will subsequently result in immediate notifications to stakeholders.",
          "it has a reactjs front end that is bilingual (englishmalayalam) and has fluid search and secure role-based dashboards."
        ],
        "words": [
          "semantically",
          "intelligent",
          "chunking",
          "of",
          "refined",
          "content",
          "into",
          "semantically",
          "preserving",
          "chunks",
          "is",
          "made.",
          "entities,",
          "summaries,",
          "and",
          "tacit",
          "departmental",
          "jargon",
          "are",
          "detected",
          "by",
          "transformer",
          "models",
          "fed",
          "on",
          "these",
          "fragments.",
          "the",
          "pipeline",
          "finishes",
          "off",
          "with",
          "the",
          "faiss",
          "based",
          "embedding",
          "indexing,",
          "and",
          "postgresql",
          "as",
          "a",
          "structure",
          "repository.",
          "intelligence",
          "goes",
          "past",
          "storage.",
          "a",
          "hash-based",
          "caching",
          "layer",
          "will",
          "provide",
          "faster",
          "retrieval,",
          "whereas",
          "a",
          "priority",
          "classification",
          "algorithm",
          "will",
          "bring",
          "out",
          "priority",
          "directives,",
          "which",
          "will",
          "subsequently",
          "result",
          "in",
          "immediate",
          "notifications",
          "to",
          "stakeholders.",
          "it",
          "has",
          "a",
          "reactjs",
          "front",
          "end",
          "that",
          "is",
          "bilingual",
          "(englishmalayalam)",
          "and",
          "has",
          "fluid",
          "search",
          "and",
          "secure",
          "role-based",
          "dashboards."
        ],
        "chunk_id": 3,
        "entities": {},
        "summary": "エンティティ、サマリー、および暗黙の部門用語は、これらの断片に供給されるトランスフォーマーモデルによって検出されます。パイプラインはフェーズベースの埋め込みインデックスと、構造リポジトリ"
      },
      {
        "sentences": [
          "full traceability is ensured by the use of audit logging.",
          "what arises herewith of such an architecture is not some document management system, but a smart engine of directives, which transforms fragmented, multilingual streams of data into prioritized, searchable, and actionable knowledge.",
          "it makes sure that the appropriate instruction, translated and categorized, goes to the appropriate individual at the very time that it counts the most.",
          "flow chartblock diagram3d diagram of the solution:figure 1. sequence diagram of whole projectfigure 2. node to node backend infrastructure"
        ],
        "words": [
          "full",
          "traceability",
          "is",
          "ensured",
          "by",
          "the",
          "use",
          "of",
          "audit",
          "logging.",
          "what",
          "arises",
          "herewith",
          "of",
          "such",
          "an",
          "architecture",
          "is",
          "not",
          "some",
          "document",
          "management",
          "system,",
          "but",
          "a",
          "smart",
          "engine",
          "of",
          "directives,",
          "which",
          "transforms",
          "fragmented,",
          "multilingual",
          "streams",
          "of",
          "data",
          "into",
          "prioritized,",
          "searchable,",
          "and",
          "actionable",
          "knowledge.",
          "it",
          "makes",
          "sure",
          "that",
          "the",
          "appropriate",
          "instruction,",
          "translated",
          "and",
          "categorized,",
          "goes",
          "to",
          "the",
          "appropriate",
          "individual",
          "at",
          "the",
          "very",
          "time",
          "that",
          "it",
          "counts",
          "the",
          "most.",
          "flow",
          "chartblock",
          "diagram3d",
          "diagram",
          "of",
          "the",
          "solution:figure",
          "1.",
          "sequence",
          "diagram",
          "of",
          "whole",
          "projectfigure",
          "2.",
          "node",
          "to",
          "node",
          "backend",
          "infrastructure"
        ],
        "chunk_id": 4,
        "entities": {},
        "summary": "このようなアーキテクチャは、いくつかの文書管理システムではなく、断片化された多言語のデータストリームを優先順位付け、検索可能、および実行可能な知識に変換するディレクティブのスマートエンジンです。 適切な"
      }
    ],
    "doc_summary": "annexure-i team : code terrors name gender email id mobile no. stream acade (mf) mic year team leader himanshu m himanshusaxena71333 9815759234 bca iii saxena gmail.com year team bhees",
    "entities": {}
  }
]