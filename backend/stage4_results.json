[
  {
    "doc_id": "singly_linkedlist.png",
    "raw_text": "Head ‘Beginnersbook.conv\n= Last node of LinkedList\nContent  Address(Pointer) of the next Points to null\nnode\n\\\nLi} 15 3600-——| 3 4000 ——--| 17 4400-- 90 null\n3200 3600 4000 4400\n\n",
    "file_type": "png",
    "length": 31,
    "cleaned_text": "head beginnersbook.conv  last node of linkedlist content address(pointer) of the next points to null node  li 15 3600- 3 4000 -- 17 4400-- 90 null 3200 3600 4000 4400 ",
    "sentences": [
      "head beginnersbook.conv  last node of linkedlist content address(pointer) of the next points to null node  li 15 3600- 3 4000 -- 17 4400-- 90 null 3200 3600 4000 4400"
    ],
    "words": [
      "head",
      "beginnersbook.conv",
      "last",
      "node",
      "linkedlist",
      "content",
      "address",
      "pointer",
      "next",
      "point",
      "null",
      "node",
      "li",
      "<NUM>",
      "<NUM>-",
      "<NUM>",
      "<NUM>",
      "<NUM>",
      "<NUM>",
      "<NUM>",
      "null",
      "<NUM>",
      "<NUM>",
      "<NUM>",
      "<NUM>"
    ],
    "num_sentences": 1,
    "num_words": 25,
    "chunks": [
      {
        "sentences": [
          "head beginnersbook.conv  last node of linkedlist content address(pointer) of the next points to null node  li 15 3600- 3 4000 -- 17 4400-- 90 null 3200 3600 4000 4400"
        ],
        "words": [
          "head",
          "beginnersbook.conv",
          "last",
          "node",
          "of",
          "linkedlist",
          "content",
          "address(pointer)",
          "of",
          "the",
          "next",
          "points",
          "to",
          "null",
          "node",
          "li",
          "15",
          "3600-",
          "3",
          "4000",
          "--",
          "17",
          "4400--",
          "90",
          "null",
          "3200",
          "3600",
          "4000",
          "4400"
        ],
        "chunk_id": 1,
        "entities": {
          "DATE": [
            "3600",
            "4000",
            "4400",
            "3200",
            "3600",
            "4000",
            "4400"
          ]
        },
        "summary": "head beginnersbook.conv last node of linkedlist content address(pointer) of the next points to null"
      }
    ],
    "doc_summary": "head beginnersbook.conv last node of linkedlist content address(pointer) of the next points to null",
    "entities": {
      "DATE": [
        "4400",
        "3600",
        "4000",
        "3200"
      ]
    }
  },
  {
    "doc_id": "CA_cap_918.pdf",
    "raw_text": "CAP – 918 Mobile-application\nwrite a program to change the text of a heading\n<div class=\"CA-heading\">\n<p>\n{{ headingText }}\n</p>\n<button (click)=\"changeON()\">text</button>\n<button (click)=\"changeOFF()\">Back</button>\n</div>\nchangeON() {\nthis.headingText = 'HELLO SIR FULL MARKS\nPLEASE';\nconsole.log('Button clicked, text changed.');\n// after clicking again on button\n}\nchangeOFF(){\nthis.headingText = 'NO MARKSSSSS';console.log('Button clicked, text changed back.');\n}Decentralized Book Exchange\n\nGET STARTED\n\nHELLO SIR FULL MARKS PLEASE",
    "file_type": "pdf",
    "length": 65,
    "cleaned_text": "cap  918 mobile-application write a program to change the text of a heading div classca-heading p  headingtext  p button (click)changeon()textbutton button (click)changeoff()backbutton div changeon()  this.headingtext  hello sir full marks please; console.log(button clicked, text changed.);  after clicking again on button  changeoff() this.headingtext  no marksssss;console.log(button clicked, text changed back.); decentralized book exchange get started hello sir full marks please",
    "sentences": [
      "cap  918 mobile-application write a program to change the text of a heading div classca-heading p  headingtext  p button (click)changeon()textbutton button (click)changeoff()backbutton div changeon()  this.headingtext  hello sir full marks please; console.log(button clicked, text changed.",
      ");  after clicking again on button  changeoff() this.headingtext  no marksssss;console.log(button clicked, text changed back.",
      "); decentralized book exchange get started hello sir full marks please"
    ],
    "words": [
      "cap",
      "<NUM>",
      "mobile-application",
      "write",
      "program",
      "change",
      "text",
      "heading",
      "div",
      "classca-heading",
      "p",
      "headingtext",
      "p",
      "button",
      "click",
      "changeon",
      "textbutton",
      "button",
      "click",
      "changeoff",
      "backbutton",
      "div",
      "changeon",
      "this.headingtext",
      "hello",
      "sir",
      "full",
      "mark",
      "please",
      "console.log",
      "button",
      "clicked",
      "text",
      "changed",
      "clicking",
      "button",
      "changeoff",
      "this.headingtext",
      "marksssss",
      "console.log",
      "button",
      "clicked",
      "text",
      "changed",
      "back",
      "decentralized",
      "book",
      "exchange",
      "get",
      "started",
      "hello",
      "sir",
      "full",
      "mark",
      "please"
    ],
    "num_sentences": 3,
    "num_words": 55,
    "chunks": [
      {
        "sentences": [
          "cap  918 mobile-application write a program to change the text of a heading div classca-heading p  headingtext  p button (click)changeon()textbutton button (click)changeoff()backbutton div changeon()  this.headingtext  hello sir full marks please; console.log(button clicked, text changed.",
          ");  after clicking again on button  changeoff() this.headingtext  no marksssss;console.log(button clicked, text changed back.",
          "); decentralized book exchange get started hello sir full marks please"
        ],
        "words": [
          "cap",
          "918",
          "mobile-application",
          "write",
          "a",
          "program",
          "to",
          "change",
          "the",
          "text",
          "of",
          "a",
          "heading",
          "div",
          "classca-heading",
          "p",
          "headingtext",
          "p",
          "button",
          "(click)changeon()textbutton",
          "button",
          "(click)changeoff()backbutton",
          "div",
          "changeon()",
          "this.headingtext",
          "hello",
          "sir",
          "full",
          "marks",
          "please;",
          "console.log(button",
          "clicked,",
          "text",
          "changed.",
          ");",
          "after",
          "clicking",
          "again",
          "on",
          "button",
          "changeoff()",
          "this.headingtext",
          "no",
          "marksssss;console.log(button",
          "clicked,",
          "text",
          "changed",
          "back.",
          ");",
          "decentralized",
          "book",
          "exchange",
          "get",
          "started",
          "hello",
          "sir",
          "full",
          "marks",
          "please"
        ],
        "chunk_id": 1,
        "entities": {},
        "summary": "cap 918 mobile-application napište program pro změnu textu čísla div classca-heading p headingtext p button (click)changeon()textbutton button (click)changeoff()backbutton div changeon() this.heading"
      }
    ],
    "doc_summary": "cap 918 mobile-application napište program pro změnu textu čísla div classca-heading p headingtext p button (click)changeon()textbutton button (click)changeoff()backbutton div changeon() this.heading",
    "entities": {}
  },
  {
    "doc_id": "gg.pdf",
    "raw_text": "Your Ingestion Requirements vs Platform\nCapabilities\n\nRequirement = Can n8n Do It? Easier Alternatives\n\nEmail ingestion (IMAP/SMTP) ( Yes (IMAP Email Trigger, Make, Zapier, Airparser\nSMTP via webhook)\n\nMaximo export API © Yes (HTTP Request node Airbyte, Apache NiFi, Talend\nintegration for REST API)\n\nSharePoint API integration © Yes (Microsoft Graph API Power Automate, Make\nvia HTTP node) Integrate.io\n\nWhatsApp PDF ingestion ( Yes (via HTTP API or Twilio Studio, 360dialog, Osmos\n(Meta/Twilio) webhook)\n\nManual file uploads (scans, 14 Yes (Webhook node or Osmos, Docparser, Make\nlinks) custom frontend)\n\nFile type handling (PDF. Yes (Binary data + parsing Docsumo, Rossum, Nanonets\nDOCX, XLSX, images) nodes)\n\n=\n~\n.\n~\n°\n.\n.\n.\n.\n= ടട [1\n°\n~\n\nBilingual text (English + 4. Partially (needs external Google Cloud Vision +\nMalayalam) OCR + language detection) Translate, AWS Textract +\nComprehend\n\nOCR for scanned 4. Needs external API Nanonets, Docsumo, AWS\nimages/handwritten notes (Tesseract, Google Vision) Textract\n\nAirparser, Make, Power\nAutomate\n\nMetadata extraction 4 Yes (via logic nodes +\n(timestamp, sender, external APIs)\nlanguage, etc.)",
    "file_type": "pdf",
    "length": 175,
    "cleaned_text": "your ingestion requirements vs platform capabilities requirement  can n8n do it? easier alternatives email ingestion (imapsmtp) ( yes (imap email trigger, make, zapier, airparser smtp via webhook) maximo export api  yes (http request node airbyte, apache nifi, talend integration for rest api) sharepoint api integration  yes (microsoft graph api power automate, make via http node) integrate.io whatsapp pdf ingestion ( yes (via http api or twilio studio, 360dialog, osmos (metatwilio) webhook) manual file uploads (scans, 14 yes (webhook node or osmos, docparser, make links) custom frontend) file type handling (pdf. yes (binary data  parsing docsumo, rossum, nanonets docx, xlsx, images) nodes)   .   . . . .  ടട 1   bilingual text (english  4. partially (needs external google cloud vision  malayalam) ocr  language detection) translate, aws textract  comprehend ocr for scanned 4. needs external api nanonets, docsumo, aws imageshandwritten notes (tesseract, google vision) textract airparser, make, power automate metadata extraction 4 yes (via logic nodes  (timestamp, sender, external apis) language, etc.)",
    "sentences": [
      "your ingestion requirements vs platform capabilities requirement  can n8n do it?",
      "easier alternatives email ingestion (imapsmtp) ( yes (imap email trigger, make, zapier, airparser smtp via webhook) maximo export api  yes (http request node airbyte, apache nifi, talend integration for rest api) sharepoint api integration  yes (microsoft graph api power automate, make via http node) integrate.io whatsapp pdf ingestion ( yes (via http api or twilio studio, 360dialog, osmos (metatwilio) webhook) manual file uploads (scans, 14 yes (webhook node or osmos, docparser, make links) custom frontend) file type handling (pdf.",
      "yes (binary data  parsing docsumo, rossum, nanonets docx, xlsx, images) nodes)   .",
      ".",
      ".",
      ".",
      ".",
      "ടട 1   bilingual text (english  4. partially (needs external google cloud vision  malayalam) ocr  language detection) translate, aws textract  comprehend ocr for scanned 4. needs external api nanonets, docsumo, aws imageshandwritten notes (tesseract, google vision) textract airparser, make, power automate metadata extraction 4 yes (via logic nodes  (timestamp, sender, external apis) language, etc.)"
    ],
    "words": [
      "ingestion",
      "requirement",
      "v",
      "platform",
      "capability",
      "requirement",
      "n<NUM>n",
      "easier",
      "alternative",
      "email",
      "ingestion",
      "imapsmtp",
      "yes",
      "imap",
      "email",
      "trigger",
      "make",
      "zapier",
      "airparser",
      "smtp",
      "via",
      "webhook",
      "maximo",
      "export",
      "api",
      "yes",
      "http",
      "request",
      "node",
      "airbyte",
      "apache",
      "nifi",
      "talend",
      "integration",
      "rest",
      "api",
      "sharepoint",
      "api",
      "integration",
      "yes",
      "microsoft",
      "graph",
      "api",
      "power",
      "automate",
      "make",
      "via",
      "http",
      "node",
      "integrate.io",
      "whatsapp",
      "pdf",
      "ingestion",
      "yes",
      "via",
      "http",
      "api",
      "twilio",
      "studio",
      "<NUM>dialog",
      "osmos",
      "metatwilio",
      "webhook",
      "manual",
      "file",
      "uploads",
      "scan",
      "<NUM>",
      "yes",
      "webhook",
      "node",
      "osmos",
      "docparser",
      "make",
      "link",
      "custom",
      "frontend",
      "file",
      "type",
      "handling",
      "pdf",
      "yes",
      "binary",
      "data",
      "parsing",
      "docsumo",
      "rossum",
      "nanonets",
      "docx",
      "xlsx",
      "image",
      "node",
      "<NUM>",
      "bilingual",
      "text",
      "english",
      "<NUM>.",
      "partially",
      "need",
      "external",
      "google",
      "cloud",
      "vision",
      "malayalam",
      "ocr",
      "language",
      "detection",
      "translate",
      "aws",
      "textract",
      "comprehend",
      "ocr",
      "scanned",
      "<NUM>.",
      "need",
      "external",
      "api",
      "nanonets",
      "docsumo",
      "aws",
      "imageshandwritten",
      "note",
      "tesseract",
      "google",
      "vision",
      "textract",
      "airparser",
      "make",
      "power",
      "automate",
      "metadata",
      "extraction",
      "<NUM>",
      "yes",
      "via",
      "logic",
      "node",
      "timestamp",
      "sender",
      "external",
      "apis",
      "language",
      "etc"
    ],
    "num_sentences": 8,
    "num_words": 143,
    "chunks": [
      {
        "sentences": [
          "your ingestion requirements vs platform capabilities requirement  can n8n do it?",
          "easier alternatives email ingestion (imapsmtp) ( yes (imap email trigger, make, zapier, airparser smtp via webhook) maximo export api  yes (http request node airbyte, apache nifi, talend integration for rest api) sharepoint api integration  yes (microsoft graph api power automate, make via http node) integrate.io whatsapp pdf ingestion ( yes (via http api or twilio studio, 360dialog, osmos (metatwilio) webhook) manual file uploads (scans, 14 yes (webhook node or osmos, docparser, make links) custom frontend) file type handling (pdf."
        ],
        "words": [
          "your",
          "ingestion",
          "requirements",
          "vs",
          "platform",
          "capabilities",
          "requirement",
          "can",
          "n8n",
          "do",
          "it?",
          "easier",
          "alternatives",
          "email",
          "ingestion",
          "(imapsmtp)",
          "(",
          "yes",
          "(imap",
          "email",
          "trigger,",
          "make,",
          "zapier,",
          "airparser",
          "smtp",
          "via",
          "webhook)",
          "maximo",
          "export",
          "api",
          "yes",
          "(http",
          "request",
          "node",
          "airbyte,",
          "apache",
          "nifi,",
          "talend",
          "integration",
          "for",
          "rest",
          "api)",
          "sharepoint",
          "api",
          "integration",
          "yes",
          "(microsoft",
          "graph",
          "api",
          "power",
          "automate,",
          "make",
          "via",
          "http",
          "node)",
          "integrate.io",
          "whatsapp",
          "pdf",
          "ingestion",
          "(",
          "yes",
          "(via",
          "http",
          "api",
          "or",
          "twilio",
          "studio,",
          "360dialog,",
          "osmos",
          "(metatwilio)",
          "webhook)",
          "manual",
          "file",
          "uploads",
          "(scans,",
          "14",
          "yes",
          "(webhook",
          "node",
          "or",
          "osmos,",
          "docparser,",
          "make",
          "links)",
          "custom",
          "frontend)",
          "file",
          "type",
          "handling",
          "(pdf."
        ],
        "chunk_id": 1,
        "entities": {},
        "summary": "ستاسو د انډول اړتیاوې vs د پلیټ فارم وړتیاوې اړتیا کولی شي n8n دا وکړي؟ اسانه بدیلونه د بریښنالیک انډول (imapsmtp) (هو (imap بریښنالیک ټریګر،"
      },
      {
        "sentences": [
          "yes (binary data  parsing docsumo, rossum, nanonets docx, xlsx, images) nodes)   .",
          ".",
          ".",
          ".",
          ".",
          "ടട 1   bilingual text (english  4. partially (needs external google cloud vision  malayalam) ocr  language detection) translate, aws textract  comprehend ocr for scanned 4. needs external api nanonets, docsumo, aws imageshandwritten notes (tesseract, google vision) textract airparser, make, power automate metadata extraction 4 yes (via logic nodes  (timestamp, sender, external apis) language, etc.)"
        ],
        "words": [
          "yes",
          "(binary",
          "data",
          "parsing",
          "docsumo,",
          "rossum,",
          "nanonets",
          "docx,",
          "xlsx,",
          "images)",
          "nodes)",
          ".",
          ".",
          ".",
          ".",
          ".",
          "ടട",
          "1",
          "bilingual",
          "text",
          "(english",
          "4.",
          "partially",
          "(needs",
          "external",
          "google",
          "cloud",
          "vision",
          "malayalam)",
          "ocr",
          "language",
          "detection)",
          "translate,",
          "aws",
          "textract",
          "comprehend",
          "ocr",
          "for",
          "scanned",
          "4.",
          "needs",
          "external",
          "api",
          "nanonets,",
          "docsumo,",
          "aws",
          "imageshandwritten",
          "notes",
          "(tesseract,",
          "google",
          "vision)",
          "textract",
          "airparser,",
          "make,",
          "power",
          "automate",
          "metadata",
          "extraction",
          "4",
          "yes",
          "(via",
          "logic",
          "nodes",
          "(timestamp,",
          "sender,",
          "external",
          "apis)",
          "language,",
          "etc.)"
        ],
        "chunk_id": 2,
        "entities": {},
        "summary": "هو (binary data parsing docsumo، rossum، nanonets docx، xlsx، انځورونه) نوډونه) . . . . . ടട 1 دوه ژبې متن (انګلیسي 4. په نسبي ډول"
      }
    ],
    "doc_summary": "ستاسو د ننوتلو اړتیاوې vs د پلیټ فارم وړتیاوې اړتیا کولی شي n8n دا وکړي؟ اسانه بدیلونه د بریښنالیک ننوتلو (imapsmtp) (هو (imap بریښنالیک ټریګر،",
    "entities": {}
  }
]